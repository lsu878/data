void plate2_porlist_create(char *c_porfile)
{
    AnsiString  s_porfile, s_dwgname, s_buf;
    AnsiString  s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12;
    int     re_count=0;
    double  ratio=0.0, re_ratio=0.0, weight=0.0,re_width=0.0, re_length=0.0;
    int     width=0,length=0,dwg_seqno=0;
    char    c_buf[256];
    int     calc_flag=0,si=0,ki=0, cont_flag=0, cont_length_flag=0;
    int     sum_cnt1=0, sum_cnt2=0, sum_cnt3=0, sum_cnt4=0, temp_sum_cnt=0, temp_cnt=0,temp_sum_rcnt=0;
    int     w_flag=0, l_flag=0, g_flag=0, t_flag=0, c_flag=0, group_index=0, sta_flag=0;
    int     pt_cnt=0, ct_cnt=0, st_cnt=0,  seqno=0, pcnt=0, ccnt=0, scnt=0, rcnt=0, tcnt=0, sno=0;
    int     re_pcnt=0, re_ccnt=0, re_scnt=0, re_rcnt=0;
    double  temp_sum_width=0.0, temp_sum_length=0.0, temp_sum_remain=0.0, max_length=0.0, max_width=0.0;
    double  plength=0.0, clength=0.0, slength=0.0, rlength=0.0;
    double  base_width=0.0, base_length=0.0;
    int hot_coil_flag = 0;
    FILE    *fp, *fs;


    for(ki=0; ki<100; ki++) plate2_dwg[ki].geyel_seqno =  "";


    base_width = MainForm->Edit_Base_Width->Text.ToDouble();
    base_length = MainForm->Edit_Base_Length->Text.ToDouble();
    // 3,TEST1,A,15,200,2000,1,,,1,NCA01,
    // 4,TEST1,A,15,200,2000,,,1,1,NCA02,
    // 1         2     3 4   5    6  7  8 9 10 11 12  13 14   15
    // NESTPART=3,TEST,A,10,1688,6474,1,0,1,0,NCA,,3406,14129,1,
    //
    s_porfile = String(c_porfile);
    // \\filer2\\hull\\shmat\\s253\\e41p\\S253-E41-POR01.PLA

    fp = fopen(s_porfile.c_str(),"r");

    if( fp == NULL ){
        return;
    }

    s_dwgname = g_ProjDir+"\\"+g_Hosun+"-por-check-"+
                    MainForm->Edit_Plate2_Lot->Text.SubString(1,3)+"b"+MainForm->Edit_Plate2_Dwgno->Text+".sbd";

    fs = fopen(s_dwgname.c_str(),"w");

    fprintf(fs,"사용자이름=%s\n",MainForm->UserName.c_str());
    fprintf(fs,"DWG_NAME=%s\n",s_dwgname.c_str());
    fprintf(fs,"HOSUN=%s\n",g_Hosun.c_str());
    fprintf(fs,"BLOCK=%s\n",g_Block.c_str());
    fprintf(fs,"DATE=%s\n",g_Date.c_str());
    fprintf(fs,"LOT=%s\n",MainForm->Edit_Plate2_Lot->Text);


    for( si=3; si <= 18; si++ ){
        if(si == 3 || si == 4 || si == 5 || si == 6 ||
           si == 9 || si == 10 || si == 11 || si == 12 ||
           si == 15 || si == 16 || si == 17 || si == 18 )
        {
            s1 = plate2[si].serno;
            s2 = plate2[si].location;
            s3 = plate2[si].grade;
            s4 = plate2[si].thk;
            s5 = plate2[si].width;
            s6 = plate2[si].length;
            s7 = plate2[si].pqty;
            s8 = plate2[si].cqty;
            s9 = plate2[si].sqty;
            s10 = plate2[si].geyel_seqno;
            //ShowMessage(s10);
            s11 = plate2[si].etc;
            /*
            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(),
            */
            fprintf(fs,"check==>si=%d s1=%s s2=%s s5=%s s6=%s s10=%s\n",
                    si, s1.c_str(),s2.c_str(),s5.c_str(),s6.c_str(), s10.c_str());

            if(s7.Length() == 0)    s7 = "0";
            if(s8.Length() == 0)    s8 = "0";
            if(s9.Length() == 0)    s9 = "0";

            sum_cnt1= s7.ToInt() + s8.ToInt() + s9.ToInt();

            if(s2.Length() != 0){
            // Grade 비교 flag
                if(si == 3 || si == 9 || si == 15){
                    // 재질
                    if(s3 != plate2[si+1].grade)    g_flag = 1;
                    if(s3 == plate2[si+1].grade)    g_flag = 2;
                    if(s3 == plate2[si+1].grade &&
                       s3 == plate2[si+2].grade )   g_flag = 3;
                    if(s3 == plate2[si+1].grade &&
                       s3 == plate2[si+2].grade &&
                       s3 == plate2[si+3].grade )   g_flag = 4;
                    // 두께
                    if(s4 != plate2[si+1].thk)      t_flag = 1;
                    if(s4 == plate2[si+1].thk)      t_flag = 2;
                    if(s4 == plate2[si+1].thk &&
                       s4 == plate2[si+2].thk )     t_flag = 3;
                    if(s4 == plate2[si+1].thk &&
                       s4 == plate2[si+2].thk &&
                       s4 == plate2[si+3].thk )     t_flag = 4;
                    // 갯수
                    if( plate2[si].pqty.Length() ==0)       plate2[si].pqty ="0";
                    if( plate2[si].cqty.Length() ==0)       plate2[si].cqty ="0";
                    if( plate2[si].sqty.Length() ==0)       plate2[si].sqty ="0";

                    if( plate2[si+1].pqty.Length() ==0)    plate2[si+1].pqty ="0";
                    if( plate2[si+1].cqty.Length() ==0)    plate2[si+1].cqty ="0";
                    if( plate2[si+1].sqty.Length() ==0)    plate2[si+1].sqty ="0";

                    if( plate2[si+2].pqty.Length() ==0)    plate2[si+2].pqty ="0";
                    if( plate2[si+2].cqty.Length() ==0)    plate2[si+2].cqty ="0";
                    if( plate2[si+2].sqty.Length() ==0)    plate2[si+2].sqty ="0";

                    if( plate2[si+3].pqty.Length() ==0)    plate2[si+3].pqty ="0";
                    if( plate2[si+3].cqty.Length() ==0)    plate2[si+3].cqty ="0";
                    if( plate2[si+3].sqty.Length() ==0)    plate2[si+3].sqty ="0";

                    if(plate2[si].pqty.ToInt() != 0 && plate2[si].sqty.ToInt() != 0 ){
                        if(plate2[si].pqty.ToInt() != plate2[si].sqty.ToInt() )     c_flag = 1;

                        if(plate2[si+1].pqty.ToInt() != 0 && plate2[si+1].sqty.ToInt() != 0 &&
                           plate2[si].pqty.ToInt() == plate2[si].sqty.ToInt() &&
                           plate2[si+1].pqty.ToInt() == plate2[si+1].sqty.ToInt()  )   c_flag = 2;

                        if(plate2[si+1].pqty.ToInt() != 0 && plate2[si+1].sqty.ToInt() != 0 &&
                           plate2[si+2].pqty.ToInt() != 0 && plate2[si+2].sqty.ToInt() != 0 &&
                           plate2[si].pqty.ToInt() == plate2[si].sqty.ToInt() &&
                           plate2[si+1].pqty.ToInt() == plate2[si+1].sqty.ToInt() &&
                           plate2[si+2].pqty.ToInt() == plate2[si+2].sqty.ToInt()  )   c_flag = 3;

                        if(plate2[si+1].pqty.ToInt() != 0 && plate2[si+1].sqty.ToInt() != 0 &&
                           plate2[si+2].pqty.ToInt() != 0 && plate2[si+2].sqty.ToInt() != 0 &&
                           plate2[si+3].pqty.ToInt() != 0 && plate2[si+3].sqty.ToInt() != 0 &&
                           plate2[si].pqty.ToInt() == plate2[si].sqty.ToInt() &&
                           plate2[si+1].pqty.ToInt() == plate2[si+1].sqty.ToInt() &&
                           plate2[si+2].pqty.ToInt() == plate2[si+2].sqty.ToInt() &&
                           plate2[si+3].pqty.ToInt() == plate2[si+3].sqty.ToInt()  )   c_flag = 4;
                        //else c_flag = 1;
                    }
                    else c_flag = 1;
                    /*
                    else if(plate2[si].cqty.ToInt() != 0 ){

                        if(plate2[si].cqty.ToInt() != plate2[si+1].cqty.ToInt() )           c_flag = 1;
                        else if( plate2[si].cqty.ToInt() == plate2[si+1].cqty.ToInt() )     c_flag = 2;
                        else if( plate2[si].cqty.ToInt() == plate2[si+1].cqty.ToInt() &&
                                 plate2[si].cqty.ToInt() == plate2[si+2].cqty.ToInt()  )    c_flag = 3;
                        else if( plate2[si].cqty.ToInt() == plate2[si+1].cqty.ToInt() &&
                                 plate2[si].cqty.ToInt() == plate2[si+2].cqty.ToInt()  &&
                                 plate2[si].cqty.ToInt() == plate2[si+3].cqty.ToInt() )     c_flag = 4;

                    }
                    */

                    // 폭
                    if( plate2[si+1].width.Length() ==0)   plate2[si+1].width ="0";
                    if( plate2[si+2].width.Length() ==0)   plate2[si+2].width ="0";
                    if( plate2[si+3].width.Length() ==0)   plate2[si+3].width ="0";


                    if(abs(s5.ToInt() - plate2[si+1].width.ToInt()) <= 10 &&
                       abs(s5.ToInt() - plate2[si+2].width.ToInt()) <= 10 &&
                       abs(s5.ToInt() - plate2[si+3].width.ToInt()) <= 10 ){
                        if( g_flag >= 4 && t_flag >= 4){
                            w_flag = 4;
                        }
                        else w_flag = 1;
                    }
                    else if( abs(s5.ToInt() - plate2[si+1].width.ToInt()) <= 10 &&
                        abs(s5.ToInt() - plate2[si+2].width.ToInt()) <= 10 ){
                        if( g_flag >= 3 && t_flag >= 3){
                            w_flag = 3;
                        }
                        else w_flag = 1;
                    }
                    else if( abs(s5.ToInt() - plate2[si+1].width.ToInt()) <= 10 ){
                        if( g_flag >= 2 && t_flag >= 2){
                            w_flag = 2;
                        }
                        else w_flag = 1;
                    }
                    else if( s5.ToInt() != plate2[si+1].width.ToInt())    w_flag = 1;
                    if(s5.ToInt()<= base_width) w_flag= 2;      //10.11.29 hyun


                    // 길이
                    if( plate2[si+1].length.Length() ==0)   plate2[si+1].length ="0";
                    if( plate2[si+2].length.Length() ==0)   plate2[si+2].length ="0";
                    if( plate2[si+3].length.Length() ==0)   plate2[si+3].length ="0";

                    if(s6.ToInt() != plate2[si+1].length.ToInt())    l_flag = 1;
                    if(s6.ToInt() == plate2[si+1].length.ToInt()){
                        if( g_flag >= 2 && t_flag >= 2){
                            if(w_flag >= 2) l_flag = 2;
                            else            l_flag = 1;
                            if(s6.ToInt() + plate2[si+1].length.ToInt() > 20000)    l_flag = 1;     //20000이상인것 예외처리 10.10.26
                        }
                        else l_flag = 1;
                    }
                    if(s6.ToInt() == plate2[si+1].length.ToInt() &&
                       s6.ToInt() == plate2[si+2].length.ToInt() ){
                        if( g_flag >= 3 && t_flag >= 3){
                            if(w_flag >= 3) l_flag = 3;
                            else            l_flag = 1;
                        }
                        else l_flag = 1;
                    }
                    if(s6.ToInt() == plate2[si+1].length.ToInt() &&
                       s6.ToInt() == plate2[si+2].length.ToInt() &&
                       s6.ToInt() == plate2[si+3].length.ToInt() ){
                       if( g_flag >= 4 && t_flag >= 4){
                            if(w_flag >= 4) l_flag = 4;
                            else            l_flag = 1;
                       }
                       else l_flag = 1;
                    }
// 폭 같을때 두 부재 길이 합이 20000 넘지 않을 때 길이 방향으로 붙이게 함 2011.05.11
                    if(g_flag == 2 && t_flag==2 && w_flag ==2 && (s6.ToInt() + plate2[si+1].length.ToInt()) < 20000)
                    {
                        base_length = 19000;
                    }
//////////////////////////////////////////////////////////////////////이창규 SW 요청
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

                    fprintf(fs,"check==>si=%d w_flag=%d l_flag=%d\n", si, w_flag, l_flag);
                }
                else if(si == 4 || si == 10 || si == 16){
                     // 재질
                    if(s3 != plate2[si+1].grade)    g_flag = 1;
                    if(s3 == plate2[si+1].grade)    g_flag = 2;
                    if(s3 == plate2[si+1].grade &&
                       s3 == plate2[si+2].grade )   g_flag = 3;
                    // 두께
                    if(s4 != plate2[si+1].thk)      t_flag = 1;
                    if(s4 == plate2[si+1].thk)      t_flag = 2;
                    if(s4 == plate2[si+1].thk &&
                       s4 == plate2[si+2].thk )     t_flag = 3;

                    if( plate2[si].pqty.Length() ==0)       plate2[si].pqty ="0";
                    if( plate2[si].cqty.Length() ==0)       plate2[si].cqty ="0";
                    if( plate2[si].sqty.Length() ==0)       plate2[si].sqty ="0";

                    if( plate2[si+1].pqty.Length() ==0)    plate2[si+1].pqty ="0";
                    if( plate2[si+1].cqty.Length() ==0)    plate2[si+1].cqty ="0";
                    if( plate2[si+1].sqty.Length() ==0)    plate2[si+1].sqty ="0";

                    if( plate2[si+2].pqty.Length() ==0)    plate2[si+2].pqty ="0";
                    if( plate2[si+2].cqty.Length() ==0)    plate2[si+2].cqty ="0";
                    if( plate2[si+2].sqty.Length() ==0)    plate2[si+2].sqty ="0";
                    // 폭
                    if( plate2[si+1].width.Length() ==0)   plate2[si+1].width ="0";
                    if( plate2[si+2].width.Length() ==0)   plate2[si+2].width ="0";

                    if(plate2[si].pqty.ToInt() != 0 && plate2[si].sqty.ToInt() != 0 ){
                        if(plate2[si].pqty.ToInt() != plate2[si].sqty.ToInt() )     c_flag = 1;

                        else if(plate2[si+1].pqty.ToInt() != 0 && plate2[si+1].sqty.ToInt() != 0 &&
                           plate2[si].pqty.ToInt() == plate2[si].sqty.ToInt() &&
                           plate2[si+1].pqty.ToInt() == plate2[si+1].sqty.ToInt()  )   c_flag = 2;

                        else if(plate2[si+1].pqty.ToInt() != 0 && plate2[si+1].sqty.ToInt() != 0 &&
                           plate2[si+2].pqty.ToInt() != 0 && plate2[si+2].sqty.ToInt() != 0 &&
                           plate2[si].pqty.ToInt() == plate2[si].sqty.ToInt() &&
                           plate2[si+1].pqty.ToInt() == plate2[si+1].sqty.ToInt() &&
                           plate2[si+2].pqty.ToInt() == plate2[si+2].sqty.ToInt()  )   c_flag = 3;
                        else c_flag = 1;
                    }
                    else c_flag = 1;



                    if(abs(s5.ToInt() - plate2[si+1].width.ToInt()) <= 10 &&
                       abs(s5.ToInt() - plate2[si+2].width.ToInt()) <= 10  ){
                        if( g_flag >= 3 && t_flag >= 3){
                            w_flag = 3;
                        }
                        else w_flag = 1;
                    }
                    else if(abs(s5.ToInt() - plate2[si+1].width.ToInt()) <= 10){
                        if( g_flag >= 2 && t_flag >= 2){
                            w_flag = 2;
                        }
                        else w_flag = 1;
                    }
                    else{
                        if(s5.ToInt() != plate2[si+1].width.ToInt())    w_flag = 1;
                    }

                    // 길이
                    if( plate2[si+1].length.Length() ==0)   plate2[si+1].length ="0";
                    if( plate2[si+2].length.Length() ==0)   plate2[si+2].length ="0";
                    if(s6.ToInt() != plate2[si+1].length.ToInt())    l_flag = 1;
                    if(s6.ToInt() == plate2[si+1].length.ToInt()){
                        if( g_flag >= 2 && t_flag >= 2){
                            if(w_flag >= 2) l_flag = 2;
                            else            l_flag = 1;
                        }
                        else l_flag = 1;
                    }
                    if(s6.ToInt() == plate2[si+1].length.ToInt() &&
                       s6.ToInt() == plate2[si+2].length.ToInt() ){
                        if( g_flag >= 3 && t_flag >= 3){
                            l_flag = 3;
                        }
                        else l_flag = 1;
                    }
                    fprintf(fs,"check==>si=%d w_flag=%d l_flag=%d\n", si, w_flag, l_flag);
                }
                else if(si == 5 || si == 11 || si == 17){
                    if(plate2_dwg[si-1].geyel_seqno.Length() > 0){
                        //MainForm->F1Book_Plate2_Dwg->TextRC[si+4][18] = "경고(중복)";
                        //plate2[si-1].geyel_seqno = "중복";
                        ShowMessage(AnsiString(c_porfile)+"의"+s2+"에서 배치된 취재 정보를 Write할때 중복이 발생합니다.");
                    }
                    if(s3 != plate2[si+1].grade)    g_flag = 1;
                    if(s3 == plate2[si+1].grade)    g_flag = 2;
                    // 두께
                    if(s4 != plate2[si+1].thk)      t_flag = 1;
                    if(s4 == plate2[si+1].thk)      t_flag = 2;

                    if( plate2[si].pqty.Length() ==0)       plate2[si].pqty ="0";
                    if( plate2[si].cqty.Length() ==0)       plate2[si].cqty ="0";
                    if( plate2[si].sqty.Length() ==0)       plate2[si].sqty ="0";

                    if( plate2[si+1].pqty.Length() ==0)    plate2[si+1].pqty ="0";
                    if( plate2[si+1].cqty.Length() ==0)    plate2[si+1].cqty ="0";
                    if( plate2[si+1].sqty.Length() ==0)    plate2[si+1].sqty ="0";

                    if(plate2[si].pqty.ToInt() != 0 && plate2[si].sqty.ToInt() != 0 ){
                        if(plate2[si].pqty.ToInt() != plate2[si].sqty.ToInt() )     c_flag = 1;

                        if(plate2[si+1].pqty.ToInt() != 0 && plate2[si+1].sqty.ToInt() != 0 &&
                           plate2[si].pqty.ToInt() == plate2[si].sqty.ToInt() &&
                           plate2[si+1].pqty.ToInt() == plate2[si+1].sqty.ToInt()  )   c_flag = 2;
                    }
                    else c_flag = 1;


                    // 폭
                    if( plate2[si+1].width.Length() ==0)   plate2[si+1].width ="0";

                    if(abs(s5.ToInt() - plate2[si+1].width.ToInt()) <= 10){
                        if( g_flag >= 2 && t_flag >= 2){
                            w_flag = 2;
                        }
                        else w_flag = 1;
                    }
                    else{
                        if(s5.ToInt() != plate2[si+1].width.ToInt())    w_flag = 1;
                    }
                    // 길이
                    if( plate2[si+1].length.Length() ==0)   plate2[si+1].length ="0";
                    if(s6.ToInt() != plate2[si+1].length.ToInt())    l_flag = 1;
                    if(s6.ToInt() == plate2[si+1].length.ToInt()){
                        if( g_flag >= 2 && t_flag >= 2){
                            if(w_flag >= 2) l_flag = 2;
                            else            l_flag = 1;
                        }
                        else l_flag = 1;
                    }
                    fprintf(fs,"check==>si=%d w_flag=%d l_flag=%d\n", si, w_flag, l_flag);
                }
                else if(si == 6 || si == 12 || si == 18){
                    if(plate2_dwg[si-2].geyel_seqno.Length() > 0){
                        //MainForm->F1Book_Plate2_Dwg->TextRC[si+4][18] = "경고(중복)";
                        //plate2[si-1].geyel_seqno = "중복";
                        ShowMessage(AnsiString(c_porfile)+"의"+s2+"에서 배치된 취재 정보를 Write할때 중복이 발생합니다.");
                    }
                    if( plate2[si].pqty.Length() ==0)       plate2[si].pqty ="0";
                    if( plate2[si].cqty.Length() ==0)       plate2[si].cqty ="0";
                    if( plate2[si].sqty.Length() ==0)       plate2[si].sqty ="0";
                    g_flag = 1;
                    t_flag = 1;
                    w_flag = 1;
                    l_flag = 1;
                    c_flag = 1;
                    fprintf(fs,"check==>si=%d w_flag=%d l_flag=%d\n", si, w_flag, l_flag);
                }

                if( s10.SubString(1,3)  == "PAA" || s10.SubString(1,3)  == "CAA" || s10.SubString(1,3)  == "XAA"){
                    g_flag = 1;
                    t_flag = 1;
                    w_flag = 1;
                    l_flag = 1;
                    temp_sum_cnt =  sum_cnt1;
                    re_count = temp_sum_cnt;
                    re_width = s5.ToDouble() +5;
                    re_length = s6.ToDouble() + 5;

                    width = int(re_width);
                    length = int(re_length);

                    seqno++;
                    s10 = s10+"0"+String(seqno);
                    plate2_dwg_save_info(s10, si);
                    dwg_seqno++;
                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,1,%s,%s,%d,%d,%d,\n",
                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),s10.c_str(),s11.c_str(), width, length, re_count);
                }

                else if( s10.SubString(1,3)  == "NCA"  ||
                         s10.SubString(1,3)  == "NCG"  ||
                         s10.SubString(1,3)  == "STA"  ||
                         s10.SubString(1,3)  == "FPA"  ||
                         s10.SubString(1,3)  == "CCA"  ||
                         s10.SubString(1,3)  == "CCG"  ||
                         s10.SubString(1,3)  == "CTA"  ||
                         s10.SubString(1,3)  == "CPA"  ||
                         s10.SubString(1,3)  == "XCA"  ||
                         s10.SubString(1,3)  == "XCG"  ||
                         s10.SubString(1,3)  == "XTA"  ||
                         s10.SubString(1,3)  == "FPG"  ||       //hyun 12.28
                         s10.SubString(1,3)  == "XPA"
                         ){

                         if(s10.SubString(1,3)  == "STA" || s10.SubString(1,3)  == "CTA" ||s10.SubString(1,3)  == "XTA")  sta_flag = 1;
                         else                               sta_flag = 0;


                    hot_coil_flag = hot_coil_plate_check(atof(s4.c_str()), s3);

                    //if(s5.ToInt() <= 1750){ // 폭을 합하여 계산하는 조건일 때.
                    if(s5.ToInt() <= base_width){
                        fprintf(fs,"check==>폭 1750 이하조건일때\n");
                        temp_sum_width = s5.ToDouble();
                        //if(s6.ToInt() <= 7000){  // 폭이 1750이하, 길이가 7000 이하
                        if(s6.ToInt() + plate2[si+1].length.ToInt() < 20000) base_length = 99999; //10.11.29 hyun
                        if(s6.ToInt() <= base_length){  // 폭이 1750이하, 길이가 7000 이하
                        if(base_length == 99999) base_length = MainForm->Edit_Base_Length->Text.ToInt();
                            fprintf(fs,"check==>길이 7000 이하조건일때 l_flag=%d\n", l_flag);
                            switch(l_flag){
                                case 1:   //  최종 길이 조건 비교시 단독 조건일때.
                                    switch(w_flag){
                                        case 1:
                                            pt_cnt = plate2[si].pqty.ToInt();
                                            ct_cnt = plate2[si].cqty.ToInt();
                                            st_cnt = plate2[si].sqty.ToInt();

                                            temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                            fprintf(fs,"check==>temp_sum_width=%.f\n", s5.ToInt());
                                            if(temp_sum_width >= 875){
                                                temp_sum_length = s6.ToDouble()*temp_sum_cnt;   //폭*2 와   전체 길이의 비율
                                                if(temp_sum_length > 20000)
                                                {
                                                    re_width = s5.ToDouble()*2;
                                                    temp_sum_length = s6.ToDouble()*(temp_sum_cnt/2);
                                                    ratio = temp_sum_length /re_width; // 폭*2 와   전체 길이 1/2의 비율
                                                    if(ratio > 6)
                                                    {
                                                        temp_sum_length = s6.ToDouble()*(temp_sum_cnt/4);
                                                        ratio = temp_sum_length /re_width; // 폭*2 와   전체 길이 (1/4)의 비율
                                                        if(ratio > 6)
                                                        {
                                                            ShowMessage("어떻게 처리해야 할지.?");
                                                        }
                                                        else
                                                        {
                                                            if(sta_flag == 1)
                                                            {
                                                                re_count = 2;
                                                                re_width = s5.ToDouble()*2 + 10 + 3;
//                                                                re_length = temp_sum_length + 30 + 3*(int(temp_sum_cnt/4+0.6)-1); //2015.7.10
                                                                re_length = temp_sum_length + 15 + 3*(int(temp_sum_cnt/4+0.6)-1);
                                                            }
                                                            else
                                                            {
                                                                re_count = 1;
//                                                                re_width = s5.ToDouble()*2 + 15*2;
//                                                                re_width = s5.ToDouble()*2 + 10*2;
                                                                re_width = s5.ToDouble()*2 + 8*2;
//                                                                re_length = temp_sum_length + 30 + 15*(int(temp_sum_cnt/4+0.6));
//                                                                re_length = temp_sum_length + 20 + 15*(int(temp_sum_cnt/4+0.6));
                                                                re_length = temp_sum_length + 12 + 6*(int(temp_sum_cnt/4+0.6));
                                                            }
                                                        }
                                                    }
                                                    else{
                                                        if(sta_flag == 1){
                                                            re_count = 1;
                                                            re_width = s5.ToDouble()*2 + 10 + 3;
//                                                            re_length = temp_sum_length + 30 + 3*(int(temp_sum_cnt/2+0.6)-1);
                                                            re_length = temp_sum_length + 15 + 3*(int(temp_sum_cnt/2+0.6)-1);
                                                        }
                                                        else{
                                                            re_count = 1;
//                                                            re_width = s5.ToDouble()*2 + 15*2;
//                                                            re_width = s5.ToDouble()*2 + 10*2;
                                                            re_width = s5.ToDouble()*2 + 8*2;
//                                                            re_length = temp_sum_length + 30;
//                                                            re_length = temp_sum_length + 20;
                                                            re_length = temp_sum_length + 12;
                                                        }
                                                    }
                                                }
                                                else{
                                                    ratio = temp_sum_length / s5.ToDouble()*2;
                                                    if(ratio > 6){
                                                        if(sta_flag == 1){
                                                            re_count = 2;
                                                            re_width = s5.ToDouble()*2 + 10 + 3;
//                                                            re_length = temp_sum_length + 30 + 3*(int(temp_sum_cnt/2+0.6)-1);
                                                            re_length = temp_sum_length + 15 + 3*(int(temp_sum_cnt/2+0.6)-1);
                                                        }
                                                        else{
                                                            re_count = 1;
//                                                            re_width = s5.ToDouble()*1 + 15;
//                                                            re_width = s5.ToDouble()*1 + 10;
                                                            re_width = s5.ToDouble()*1 + 8;
//                                                            re_length = temp_sum_length + 15*temp_sum_cnt;
//                                                            re_length = temp_sum_length + 10*temp_sum_cnt;
                                                            re_length = temp_sum_length + 6*temp_sum_cnt;
                                                        }

                                                    }
                                                    else{
                                                        if(sta_flag == 1){
                                                            re_count = 1;
                                                            re_width = s5.ToDouble()*2 + 10 + 3;
//                                                            re_length = temp_sum_length + 30 + 3*(int(temp_sum_cnt+0.6)-1);
                                                            re_length = temp_sum_length + 15 + 3*(int(temp_sum_cnt+0.6)-1);
                                                        }
                                                        else{
                                                            re_count = 1;
//                                                            re_width = s5.ToDouble()*2 + 15*2;
//                                                            re_width = s5.ToDouble()*2 + 10*2;
                                                            re_width = s5.ToDouble()*2 + 8*2;
//                                                            re_length = temp_sum_length + 30 + 15*(int(temp_sum_cnt+0.6));
//                                                            re_length = temp_sum_length + 20 + 10*(int(temp_sum_cnt+0.6));
                                                            re_length = temp_sum_length + 12 + 6*(int(temp_sum_cnt+0.6));
                                                        }
                                                    }
                                                }
                                            }
                                            else{
                                                fprintf(fs,"check==>폭이 875 이하인 조건일때\n");
                                                temp_cnt = int( (base_width/s5.ToDouble())+1);

                                                temp_sum_width = s5.ToDouble()*temp_cnt;
                                                temp_sum_length = s6.ToDouble()*temp_cnt;

                                                ratio =  temp_sum_length / temp_sum_width;

                                                if(ratio > 6){
                                                    if(sta_flag == 1){
                                                        re_count = 2;
                                                        re_width = s5.ToDouble()*temp_cnt + 10 + 3*(temp_cnt-1);
//                                                        re_length = (temp_sum_length + 30 + 3*(int(temp_sum_cnt/temp_cnt+0.6)-1))/2;
                                                        re_length = (temp_sum_length + 15 + 3*(int(temp_sum_cnt/temp_cnt+0.6)-1))/2;
                                                    }
                                                    else{
                                                        re_count = 2;
//                                                        re_width = s5.ToDouble()*2 + 15*2;
//                                                        re_width = s5.ToDouble()*2 + 10*2;
                                                        re_width = s5.ToDouble()*2 + 8*2;
//                                                        re_length = (temp_sum_length + 15*(int(temp_sum_cnt/temp_cnt+0.6))/2);
//                                                        re_length = (temp_sum_length + 10*(int(temp_sum_cnt/temp_cnt+0.6))/2);
                                                        re_length = (temp_sum_length + 6*(int(temp_sum_cnt/temp_cnt+0.6))/2);
                                                    }
                                                }
                                                else{
                                                    if(sta_flag == 1){
                                                        re_count = 1;
                                                        re_width = s5.ToDouble()*temp_cnt + 10 + 3*(temp_cnt-1);
//                                                        re_length = temp_sum_length + 30 + 3*(int(temp_sum_cnt/temp_cnt+0.6)-1);
                                                        re_length = temp_sum_length + 15 + 3*(int(temp_sum_cnt/temp_cnt+0.6)-1);
                                                    }
                                                    else{
                                                        re_count = 1;
//                                                        re_width = s5.ToDouble()*temp_cnt + 15*temp_cnt;
//                                                        re_width = s5.ToDouble()*temp_cnt + 10*temp_cnt;
                                                        re_width = s5.ToDouble()*temp_cnt + 8*temp_cnt;
//                                                        re_length = temp_sum_length + 15*(int(temp_sum_cnt/temp_cnt+0.6));
//                                                        re_length = temp_sum_length + 10*(int(temp_sum_cnt/temp_cnt+0.6));
                                                        re_length = temp_sum_length + 6*(int(temp_sum_cnt/temp_cnt+0.6));
                                                    }
                                                }

                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                        break;
                                        case 2:
                                            temp_sum_length = s6.ToInt() + plate2[si+1].length.ToInt();
                                            if(temp_sum_length > base_length){   // 길이 두개를 더한 값이 base_length 보다 컸을때.
                                                sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                                temp_sum_cnt = sum_cnt1 + sum_cnt2;

                                                if( (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) >  20000 && c_flag <2){
                                                    re_count = 2;
//                                                    if(sta_flag == 1)   re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 30 + 3*re_count;
                                                    if(sta_flag == 1)   re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 15 + 3*re_count;
//                                                    else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 15*re_count;
//                                                    else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 10*re_count;
                                                    else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 6*re_count;
                                                }
                                                else if(c_flag >= 2)
                                                {
                                                    if(s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2 / 2 <  20000)
                                                    {
                                                        re_count = 1;
//                                                        if(sta_flag == 1) re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 30 + 3*temp_sum_cnt;
                                                        if(sta_flag == 1) re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 15 + 3*temp_sum_cnt;
                                                        else
                                                        {
//                                                        re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 15*temp_sum_cnt;
//                                                        re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 10*temp_sum_cnt;
                                                        re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 6*temp_sum_cnt;
//                                                        temp_sum_length=    re_length - 15 * temp_sum_cnt;
//                                                        temp_sum_length=    re_length - 10 * temp_sum_cnt;
                                                        temp_sum_length=    re_length - 6 * temp_sum_cnt;
                                                        }
                                                    }
                                                }
                                                else{
                                                    re_count = 1;
//                                                    if(sta_flag == 1)   re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 30 + 3*temp_sum_cnt;
                                                    if(sta_flag == 1)   re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15 + 3*temp_sum_cnt;
//                                                    else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15*temp_sum_cnt;
//                                                    else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 10*temp_sum_cnt;
                                                    else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 6*temp_sum_cnt;
                                                }
                                            }
                                            else
                                            {
                                                sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                                temp_sum_cnt = sum_cnt1 + sum_cnt2;
                                                if( (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) >  20000 ){
                                                    re_count = 2;
//                                                    if(sta_flag == 1)   re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 30 + 3*re_count;
                                                    if(sta_flag == 1)   re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 15 + 3*re_count;
//                                                    else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 15*re_count;
//                                                    else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 10*re_count;
                                                    else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 6*re_count;
                                                }
                                                else{
                                                    re_count = 1;
                                                    if(sta_flag == 1)   re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15*temp_sum_cnt;
                                                    //else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 30 + 3*temp_sum_cnt;
//                                                    else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 20 + 3*temp_sum_cnt;
                                                    else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 12 + 3*temp_sum_cnt;
                                                }
                                            }
//                                            if(sta_flag == 1)   re_width = temp_sum_width +10;
                                            if(sta_flag == 1)   re_width = temp_sum_width +8;
                                            else if(c_flag >=2)
                                            {
//                                                re_width = temp_sum_width * 2 + 30;
//                                                re_width = temp_sum_width * 2 + 20;
                                                re_width = temp_sum_width * 2 + 16;
                                                if(sum_cnt1 != sum_cnt2) re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2);
                                                else re_length = temp_sum_length;
                                                if(s5.ToInt() != plate2[si+1].width.ToInt())
                                                {
//                                                    re_width = s5.ToInt() + plate2[si+1].width.ToInt() + 30;
//                                                    re_width = s5.ToInt() + plate2[si+1].width.ToInt() + 15;
                                                      re_width = s5.ToInt() + plate2[si+1].width.ToInt() + 16;
                                                        re_length = temp_sum_length;
                                                }
                                                double tmp_len = 0;
                                                if(s6.ToInt() > plate2[si+1].length.ToInt())
                                                    tmp_len = s6.ToDouble();
                                                else
                                                    tmp_len = plate2[si+1].length.ToDouble();

//                                                re_length = re_length + ceil(re_length/tmp_len) * 15;
//                                                re_length = re_length + ceil(re_length/tmp_len) * 10;
                                                re_length = re_length + ceil(re_length/tmp_len) * 6;
                                                re_count = temp_sum_cnt / 4;
                                            }
//                                            else                re_width = temp_sum_width +15;
//                                            else                re_width = temp_sum_width +10;
                                            else                re_width = temp_sum_width +8;
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);

                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                            si = si+1;
                                        break;
                                        case 3:
//                                            if(sta_flag  == 1)  re_width = temp_sum_width +10;
                                            if(sta_flag  == 1)  re_width = temp_sum_width +8;
//                                            else                re_width = temp_sum_width +15;
//                                            else                re_width = temp_sum_width +10;
                                            else                re_width = temp_sum_width +8;

                                            ShowMessage("경우의 수 반영 안됨..2805 연락 요?");
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);

                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);

                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                            si = si+2;
                                        break;
                                        case 4:
                                            temp_sum_length = plate2[si].length.ToDouble() + plate2[si+1].length.ToDouble() + plate2[si+2].length.ToDouble() + plate2[si+3].length.ToDouble();
                                            sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                            sum_cnt3 = plate2[si+2].pqty.ToInt() + plate2[si+2].cqty.ToInt() + plate2[si+2].sqty.ToInt();
                                            sum_cnt4 = plate2[si+3].pqty.ToInt() + plate2[si+3].cqty.ToInt() + plate2[si+3].sqty.ToInt();
                                            temp_sum_cnt = sum_cnt1 + sum_cnt2 + sum_cnt3 + sum_cnt4;
                                            ratio = temp_sum_length/s5.ToDouble();
                                            if(temp_sum_length < base_length){
                                                if(ratio < 6){ // 비율이 1:4이상이 되지 않으면.
                                                    temp_sum_length = plate2[si].length.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2 +
                                                                      plate2[si+2].length.ToDouble()*sum_cnt3 + plate2[si+3].length.ToDouble()*sum_cnt4;
                                                    if(temp_sum_length < 20000){
                                                        re_count = 1;
                                                        if(sta_flag == 1){
//                                                            re_width = s5.ToDouble()+10;
                                                            re_width = s5.ToDouble()+8;
//                                                            re_length = temp_sum_length + 30 + 3*temp_sum_cnt;
                                                            re_length = temp_sum_length + 15 + 3*temp_sum_cnt;
                                                        }
                                                        else{
//                                                            re_width = s5.ToDouble()+15;
//                                                            re_width = s5.ToDouble()+10;
                                                            re_width = s5.ToDouble()+8;
//                                                            re_length = temp_sum_length + 15*temp_sum_cnt;
//                                                            re_length = temp_sum_length + 10*temp_sum_cnt;
                                                            re_length = temp_sum_length + 6*temp_sum_cnt;
                                                        }
                                                    }
                                                    else{
                                                        re_count = 2;
                                                        if(sta_flag == 1){
//                                                            re_width = s5.ToDouble()+10;
                                                            re_width = s5.ToDouble()+8;
//                                                            re_length = (temp_sum_length + 30 + 3*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length + 15 + 3*temp_sum_cnt)/2;
                                                        }
                                                        else{
//                                                            re_width = s5.ToDouble()+15;
//                                                            re_width = s5.ToDouble()+10;
                                                            re_width = s5.ToDouble()+8;
//                                                            re_length = (temp_sum_length + 15*temp_sum_cnt)/2;
//                                                            re_length = (temp_sum_length + 10*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length + 6*temp_sum_cnt)/2;
                                                        }
                                                    }
                                                }
                                                else{
                                                    temp_sum_length = plate2[si].length.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2 +
                                                                      plate2[si+2].length.ToDouble()*sum_cnt3 + plate2[si+3].length.ToDouble()*sum_cnt4;
                                                    if(temp_sum_length < 20000){
                                                        re_count = 1;
                                                        if(sta_flag == 1){
//                                                            re_width = s5.ToDouble()*2 + 10 +3;
                                                            re_width = s5.ToDouble()*2 + 8 +3;
//                                                            re_length = (temp_sum_length +30 + 3*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length +15 + 3*temp_sum_cnt)/2;
                                                        }
                                                        else{
//                                                            re_width = s5.ToDouble()*2+15;
//                                                            re_width = s5.ToDouble()*2+10;
                                                            re_width = s5.ToDouble()*2+8;
//                                                            re_length = (temp_sum_length + 15*temp_sum_cnt)/2;
//                                                            re_length = (temp_sum_length + 10*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length + 6*temp_sum_cnt)/2;
                                                        }
                                                    }
                                                    else{
                                                        re_count = 2;
                                                        if(sta_flag == 1){
//                                                            re_width = s5.ToDouble()*2+10+3;
                                                            re_width = s5.ToDouble()*2+8+3;
                                                            re_length = (temp_sum_length + 15*temp_sum_cnt)/2;
                                                        }
                                                        else{
//                                                            re_width = s5.ToDouble()*2+15;
//                                                            re_width = s5.ToDouble()*2+10;
                                                            re_width = s5.ToDouble()*2+8;
//                                                            re_length = (temp_sum_length + 15*temp_sum_cnt)/2;
//                                                            re_length = (temp_sum_length + 10*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length + 6*temp_sum_cnt)/2;
                                                        }
                                                    }
                                                }
                                            }
                                            else{
                                                 temp_sum_length = plate2[si].length.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2 +
                                                                      plate2[si+2].length.ToDouble()*sum_cnt3 + plate2[si+3].length.ToDouble()*sum_cnt4;

                                                  if(temp_sum_length < 20000){
                                                       re_count = 1;
                                                       if(sta_flag == 1){
//                                                            re_width = s5.ToDouble()*2+10+3;
                                                            re_width = s5.ToDouble()*2+8+3;
//                                                            re_length = (temp_sum_length + 30 + 3*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length + 15 + 3*temp_sum_cnt)/2;
                                                       }
                                                       else{
//                                                            re_width = s5.ToDouble()*2+15;
//                                                            re_width = s5.ToDouble()*2+10;
                                                            re_width = s5.ToDouble()*2+8;
//                                                            re_length = (temp_sum_length + 15*temp_sum_cnt)/2;
//                                                            re_length = (temp_sum_length + 10*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length + 6*temp_sum_cnt)/2;
                                                       }
                                                  }
                                                  else{
                                                      re_count = 2;
                                                      if(sta_flag == 1){
//                                                            re_width = s5.ToDouble()*2+10 +3;
                                                            re_width = s5.ToDouble()*2+8 +3;
//                                                            re_length = (temp_sum_length + 30 + 3*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length + 15 + 3*temp_sum_cnt)/2;
                                                      }
                                                      else{
//                                                            re_width = s5.ToDouble()*2+15;
//                                                            re_width = s5.ToDouble()*2+10;
                                                            re_width = s5.ToDouble()*2+8;
//                                                            re_length = (temp_sum_length + 15*temp_sum_cnt)/2;
//                                                            re_length = (temp_sum_length + 10*temp_sum_cnt)/2;
                                                            re_length = (temp_sum_length + 6*temp_sum_cnt)/2;
                                                      }
                                                  }
                                            }
                                            //re_width = temp_sum_width +15;
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);

                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                             fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+3].serno, plate2[si+3].location ,plate2[si+3].grade, plate2[si+3].thk,
                                                plate2[si+3].width, plate2[si+3].length ,plate2[si+3].pqty, plate2[si+3].cqty,plate2[si+3].sqty);

                                            si = si+3;
                                        break;
                                    }
                                break;
                                case 2:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt();
                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                    temp_sum_length = s6.ToDouble()*sum_cnt1;   // temp_sum_cnt;
                                    if( temp_sum_length > 20000){
                                        re_count = temp_sum_cnt/2;      // 2;
                                        if(sta_flag == 1){
//                                            re_length = temp_sum_length/2 + 30 +3*re_count;
                                            re_length = temp_sum_length/2 + 15 +3*re_count;
//                                            re_width = s5.ToDouble()*2 + 10 + 3;
                                            re_width = s5.ToDouble()*2 + 8 + 3;
                                        }
                                        else{
                                            re_count = 2;//
//                                            re_length = temp_sum_length/2 + 15* temp_sum_cnt / 4;
//                                            re_length = temp_sum_length/2 + 10* temp_sum_cnt / 4;
                                            re_length = temp_sum_length/2 + 8* temp_sum_cnt / 4;
//                                            re_width = s5.ToDouble()*2 + 15*2;
//                                            re_width = s5.ToDouble()*2 + 10*2;
                                            re_width = s5.ToDouble()*2 + 6*2;
                                            if(s5 != plate2[si+1].width)
//                                                re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 30;
//                                                re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 20;
                                                re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 16;
                                        }
                                        if(re_length>20000)
                                        {
                                            re_count = re_count * 2;
//                                            re_length = re_length - 15* temp_sum_cnt / 4;
//                                            re_length = re_length - 10* temp_sum_cnt / 4;
                                            re_length = re_length - 6* temp_sum_cnt / 4;
                                            re_length = re_length / 2;
//                                            re_length = re_length + 15* temp_sum_cnt / 8;
//                                            re_length = re_length + 10* temp_sum_cnt / 8;
                                            re_length = re_length + 6* temp_sum_cnt / 8;
                                        }
                                    }
                                    else if(c_flag >= 2)        //hyun
                                    {
                                        sum_cnt1 = plate2[si].pqty.ToInt() + plate2[si].cqty.ToInt() + plate2[si].sqty.ToInt();
                                        sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                        if(s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2 / 2 <  20000)
                                        {
                                            re_count = 1;
//                                            if(sta_flag == 1) re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 30 + 3*temp_sum_cnt;
                                            if(sta_flag == 1) re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 15 + 3*temp_sum_cnt;
                                            else
                                            {
//                                            re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 30;
//                                            re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 20;
                                            re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 16;
//                                            re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 15*(sum_cnt2 + sum_cnt1)/2;
//                                            re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 10*(sum_cnt2 + sum_cnt1)/2;
                                            re_length = (s6.ToDouble()*sum_cnt1/2 + plate2[si+1].length.ToDouble()*sum_cnt2/2) + 6*(sum_cnt2 + sum_cnt1)/2;
//                                            temp_sum_length=    re_length - 15 * temp_sum_cnt;
//                                            temp_sum_length=    re_length - 10 * temp_sum_cnt;
                                            temp_sum_length=    re_length - 6 * temp_sum_cnt;
                                            }
                                        }
                                    }
                                    else{
                                        re_count = 1;
                                        if(sta_flag == 1){
//                                            re_length = temp_sum_length + 30 + 3*temp_sum_cnt;
                                            re_length = temp_sum_length + 15 + 3*temp_sum_cnt;
//                                            re_width = temp_sum_width +10;
                                            re_width = temp_sum_width +8;
                                        }
                                        else{
//                                            re_length = temp_sum_length + 15* sum_cnt1;
//                                            re_length = temp_sum_length + 10* sum_cnt1;
                                            re_length = temp_sum_length + 6* sum_cnt1;
//                                            re_width = s5.ToDouble()*2 + 15*2;
//                                            re_width = s5.ToDouble()*2 + 10*2;
                                            re_width = s5.ToDouble()*2 + 8*2;
                                            if(s5 != plate2[si+1].width)
//                                                re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 30;
//                                                re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 20;
                                                re_width = s5.ToDouble() + plate2[si+1].width.ToDouble() + 16;
                                        }
                                    }

                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);


                                    si = si+1;

                                break;
                                case 3:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt();
                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                    temp_sum_length = s6.ToDouble()*3;
                                    if( temp_sum_length < 20000){
                                        re_count = 1;
                                        if(sta_flag == 1){
//                                            re_width = s5.ToDouble()*2 + 10 + 3;
                                            re_width = s5.ToDouble()*2 + 8 + 3;
//                                            re_length = temp_sum_length + 30 + 3*3;
                                            re_length = temp_sum_length + 15 + 3*3;
                                        }
                                        else{
//                                            re_width = s5.ToDouble()*2 + 15*2;
//                                            re_width = s5.ToDouble()*2 + 10*2;
                                            re_width = s5.ToDouble()*2 + 8*2;
//                                            re_length = temp_sum_length + 15*3;
//                                            re_length = temp_sum_length + 10*3;
                                            re_length = temp_sum_length + 6*3;
                                        }
                                    }
                                    else{
                                        ShowMessage("경우의 수가 틀림 2805 문의바람?");
                                    }
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);


                                    si = si+2;

                                break;
                                case 4:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt() + plate2[si+3].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt() + plate2[si+3].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt() + plate2[si+3].sqty.ToInt();

                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;

                                    temp_sum_length = s6.ToDouble()*4;

                                    temp_sum_length = s6.ToDouble()*3;
                                    if( temp_sum_length < 20000){
                                        re_count = 1;
                                        if(sta_flag == 1){
//                                            re_width = s5.ToDouble() + 10 + 3;
                                            re_width = s5.ToDouble() + 8 + 3;
//                                            re_length = temp_sum_length + 30 +3*4;
                                            re_length = temp_sum_length + 15 +3*4;
                                        }
                                        else{
//                                            re_width = s5.ToDouble() + 15*2;
//                                            re_width = s5.ToDouble() + 10*2;
                                            re_width = s5.ToDouble() + 8*2;
//                                            re_length = temp_sum_length + 15*4;
//                                            re_length = temp_sum_length + 10*4;
                                            re_length = temp_sum_length + 6*4;
                                        }
                                    }
                                    else{
                                        ShowMessage("경우의 수가 틀림 2805 문의바람?");
                                    }
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+3].serno, plate2[si+3].location ,plate2[si+3].grade, plate2[si+3].thk,
                                                plate2[si+3].width, plate2[si+3].length ,plate2[si+3].pqty, plate2[si+3].cqty,plate2[si+3].sqty);

                                    si = si+3;
                                break;
                            }
                            // 1       2         3     4     5      6       7    8    9     10     11     12     13,      14,        15
                            // pos, location   grade thk   width  length    p     c   s   group
                            // 3(1),TEST1(2),  A(3),10(4),1688(5),12180(6),1(7),0(8),0(9),g_idex(10), NCA(11),(12),3406(13),12195(14),1(15),

                        }
                        else{    // 폭 1750 이하 조건에서 길이 조건이 7,000보다 컸을때.
                            fprintf(fs,"check==>길이 base_length 이상 조건일때 l_flag=%d\n", l_flag);
                            ratio = s6.ToDouble()/s5.ToDouble();
                            temp_sum_length = s6.ToDouble();

                            switch(l_flag){  // 길이 기준 Flag;
                                case    1 :
                                    fprintf(fs,"check==>길이 7000 이상 조건일때 l_flag=1 조건에서 w_flag=%d\n", w_flag);
                                    switch(w_flag){
                                        case 1:
                                            if(sta_flag == 1){
                                                if(s5.ToDouble() < 1000){
//                                                    re_width = temp_sum_width*sum_cnt1 + 10 + (sum_cnt1-1)*3;
                                                    re_width = temp_sum_width*sum_cnt1 + 8 + (sum_cnt1-1)*3;
//                                                    re_length = temp_sum_length + 15*2;
                                                    re_length = temp_sum_length + 7.5*2;
                                                    re_count = 1;
                                                }
                                                else{
                                                    re_count = sum_cnt1;
//                                                    re_width = s5.ToDouble() + 10;
                                                    re_width = s5.ToDouble() + 8;
//                                                    re_length = temp_sum_length + 30;
                                                    re_length = temp_sum_length + 15;
                                                }
                                            }
                                            else{
                                                re_count = sum_cnt1;
                                                if(re_count == 2)
                                                {
                                                    re_count = 1;
//                                                    re_width = s5.ToDouble()*2 + 15*2;
//                                                    re_width = s5.ToDouble()*2 + 10*2;
                                                    re_width = s5.ToDouble()*2 + 8*2;
//                                                    re_length = temp_sum_length + 15;
//                                                    re_length = temp_sum_length + 10;
                                                    re_length = temp_sum_length + 6;
                                                }
                                                else
                                                {
//                                                    re_width = s5.ToDouble() + 15;  //re_width = s5.ToDouble()*2 + 15*2;
//                                                    re_width = s5.ToDouble() + 10;  //re_width = s5.ToDouble()*2 + 15*2;
                                                    re_width = s5.ToDouble() + 8;  //re_width = s5.ToDouble()*2 + 15*2;
//                                                    re_length = temp_sum_length + 15;
//                                                    re_length = temp_sum_length + 10;
                                                    re_length = temp_sum_length + 6;
                                                }
                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                        break;
                                        case 2:
                                            sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                            temp_sum_cnt = sum_cnt1+sum_cnt2;
//                                            temp_sum_width = s5.ToDouble()*2 + 15*2;
                                            temp_sum_width = s5.ToDouble()*2 + 10*2;
                                            max_length = s6.ToDouble();
                                            if(plate2[si+1].length.ToDouble() > max_length){
                                                max_length = plate2[si+1].length.ToDouble();
                                            }
                                            re_count = (temp_sum_cnt/2);

                                            if(sta_flag == 1){
//                                                re_width = s5.ToDouble()*2 + 10 +3;
                                                re_width = s5.ToDouble()*2 + 8 +3;
//                                                re_length = max_length + 30 + re_count*3;
                                                re_length = max_length + 15 + re_count*3;
                                            }
                                            else{
                                                //re_width = s5.ToDouble()*2 + 15*2;
                                                //re_length = max_length + re_count*15;
//                                                re_width = s5.ToDouble()*2 + 10*2;
                                                re_width = s5.ToDouble()*2 + 8*2;
//                                                re_length = max_length + re_count*10;
                                                re_length = max_length + re_count*6;

                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                            si = si +1;
                                        break;
                                        case 3:
                                            temp_sum_length = s6.ToInt() + plate2[si+1].length.ToInt() + plate2[si+2].length.ToInt();

                                            pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt();
                                            ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt();
                                            st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt();

                                            temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;

                                            fprintf(fs,"check==>w_flag = %d temp_sum_length=%d temp_sum_cnt=%d\n", w_flag, temp_sum_length, temp_sum_cnt);

                                            if( temp_sum_length < 20000) {
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 + 3*(temp_sum_cnt/3);
//                                                    re_width = s5.ToDouble()*2 +10 + 3;
                                                    re_length = temp_sum_length + 15 + 3*(temp_sum_cnt/3);
                                                    re_width = s5.ToDouble()*2 +8 + 3;
                                                    re_count = 1;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*(temp_sum_cnt/3);
//                                                    re_width = s5.ToDouble()*2 + 15*2;
//                                                    re_length = temp_sum_length + 10*(temp_sum_cnt/3);
//                                                    re_width = s5.ToDouble()*2 + 10*2;
                                                    re_length = temp_sum_length + 6*(temp_sum_cnt/3);
                                                    re_width = s5.ToDouble()*2 + 8*2;
                                                    re_count = 1;
                                                }
                                            }
                                            else{
                                                ShowMessage(" 결과값 확인 바람..오류 발생시 정창환 DR 2085 연락 바랍니다");
                                                if(sta_flag == 1){
//                                                    re_length = (temp_sum_length +  30 + 3*temp_sum_cnt)/2;
//                                                    re_width = s5.ToDouble()*2 + 10 + 3;
                                                    re_length = (temp_sum_length +  15 + 3*temp_sum_cnt)/2;
                                                    re_width = s5.ToDouble()*2 + 8 + 3;
                                                    re_count = 2;
                                                }
                                                else{
//                                                    re_length = (temp_sum_length + 15*temp_sum_cnt)/2;
//                                                    re_width = s5.ToDouble()*2 + 15*2;
//                                                    re_length = (temp_sum_length + 10*temp_sum_cnt)/2;
//                                                    re_width = s5.ToDouble()*2 + 10*2;
                                                    re_length = (temp_sum_length + 6*temp_sum_cnt)/2;
                                                    re_width = s5.ToDouble()*2 + 8*2;
                                                    re_count = 2;
                                                }
                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                            si = si+2;

                                        break;
                                        case 4:
                                            temp_sum_length = s6.ToDouble() + plate2[si+1].length.ToDouble() + plate2[si+2].length.ToDouble()+plate2[si+3].length.ToDouble();

                                            pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt() + plate2[si+3].pqty.ToInt();
                                            ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt() + plate2[si+3].cqty.ToInt();
                                            st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt() + plate2[si+3].sqty.ToInt();

                                            temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;

                                            fprintf(fs,"check==>w_flag = %d temp_sum_length=%d temp_sum_cnt=%d\n", w_flag, temp_sum_length, temp_sum_cnt);

                                            if( temp_sum_length < 20000) {
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 + 3*(temp_sum_cnt/3);
//                                                    re_width = s5.ToDouble()*2 +10 + 3;
                                                    re_length = temp_sum_length + 15 + 3*(temp_sum_cnt/3);
                                                    re_width = s5.ToDouble()*2 +8 + 3;
                                                    re_count = 1;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*(temp_sum_cnt/3);
//                                                    re_width = s5.ToDouble()*2 + 15*2;
//                                                    re_length = temp_sum_length + 10*(temp_sum_cnt/3);
//                                                    re_width = s5.ToDouble()*2 + 10*2;
                                                    re_length = temp_sum_length + 6*(temp_sum_cnt/3);
                                                    re_width = s5.ToDouble()*2 + 8*2;
                                                    re_count = 1;
                                                }
                                            }
                                            else{
                                                ShowMessage(" 결과값 확인 바람..오류 발생시 정창환 DR 2085 연락 바랍니다");
                                                if(sta_flag == 1){
//                                                    re_length = (temp_sum_length +  30 + 3*temp_sum_cnt)/2;
//                                                    re_width = s5.ToDouble()*2 + 10 + 3;
                                                    re_length = (temp_sum_length +  15 + 3*temp_sum_cnt)/2;
                                                    re_width = s5.ToDouble()*2 + 8 + 3;
                                                    re_count = 2;
                                                }
                                                else{
//                                                    re_length = (temp_sum_length + 15*temp_sum_cnt)/2;
//                                                    re_width = s5.ToDouble()*2 + 15*2;
//                                                    re_length = (temp_sum_length + 10*temp_sum_cnt)/2;
//                                                    re_width = s5.ToDouble()*2 + 10*2;
                                                    re_length = (temp_sum_length + 6*temp_sum_cnt)/2;
                                                    re_width = s5.ToDouble()*2 + 8*2;
                                                    re_count = 2;
                                                }
                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+3].serno, plate2[si+3].location ,plate2[si+3].grade, plate2[si+3].thk,
                                                plate2[si+3].width, plate2[si+3].length ,plate2[si+3].pqty, plate2[si+3].cqty,plate2[si+3].sqty);

                                            si = si + 3;

                                        break;
                                    }
                                break;
                                case    2:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt();

                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;

                                    if(sta_flag == 1){
//                                        temp_sum_width = s5.ToDouble()*2 + 30 + 3;
                                        temp_sum_width = s5.ToDouble()*2 + 15 + 3;
                                    }
//                                    else temp_sum_width = s5.ToDouble()*2 + 15*2;
//                                    else temp_sum_width = s5.ToDouble()*2 + 10*2;
                                    else temp_sum_width = s5.ToDouble()*2 + 8*2;

                                    temp_sum_length = temp_sum_cnt*s6.ToDouble();

                                    if(temp_sum_length < 20000){
                                        re_count = temp_sum_cnt/2;
                                        if(sta_flag == 1){
                                            re_width = temp_sum_width;
//                                            re_length = s6.ToDouble()*sum_cnt1 + 30 + 3*sum_cnt1;
                                            re_length = s6.ToDouble()*sum_cnt1 + 15 + 3*sum_cnt1;
                                        }
                                        else{
                                            re_width = temp_sum_width;
//                                            re_length = s6.ToDouble()*sum_cnt1 + 15*sum_cnt1;
//                                            re_length = s6.ToDouble()*sum_cnt1 + 10*sum_cnt1;
                                            re_length = s6.ToDouble()*sum_cnt1 + 6*sum_cnt1;
                                        }
                                    }
                                    else{
                                       re_count = temp_sum_cnt/4;
                                       if(sta_flag == 1){
                                            re_width = temp_sum_width;
//                                            re_length = s6.ToDouble()*sum_cnt1 + 30 + 3*sum_cnt1;
                                            re_length = s6.ToDouble()*sum_cnt1 + 15 + 3*sum_cnt1;
                                       }
                                       else{
                                            re_width = temp_sum_width;
//                                            re_length = s6.ToDouble()*sum_cnt1 + 15*sum_cnt1;
//                                            re_length = s6.ToDouble()*sum_cnt1 + 10*sum_cnt1;
                                            re_length = s6.ToDouble()*sum_cnt1 + 6*sum_cnt1;
                                       }
                                    }
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                    si = si+1;
                                break;
                                case    3:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt();

                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                    re_count = temp_sum_cnt/2;
                                    if(sta_flag == 1){
//                                        re_length = 30 + temp_sum_length;
//                                        re_width = s5.ToDouble()*2 + 10 + 3;
                                        re_length = 15 + temp_sum_length;
                                        re_width = s5.ToDouble()*2 + 8 + 3;
                                    }
                                    else{
//                                        re_length = 15 + temp_sum_length;
//                                        re_width = s5.ToDouble()*2 + 15*2;
//                                        re_length = 10 + temp_sum_length;
//                                        re_width = s5.ToDouble()*2 + 10*2;
                                        re_length = 6 + temp_sum_length;
                                        re_width = s5.ToDouble()*2 + 8*2;
                                    }
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                     si = si+2;
                                break;
                                case    4:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt() + plate2[si+3].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt() + plate2[si+3].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt() + plate2[si+3].sqty.ToInt();

                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                    re_count = temp_sum_cnt/2;
                                    if(sta_flag == 1){
//                                        re_length = 30 + temp_sum_length;
//                                        re_width = s5.ToDouble()*2 + 10 + 3;
                                        re_length = 15 + temp_sum_length;
                                        re_width = s5.ToDouble()*2 + 8 + 3;
                                    }
                                    else{
//                                        re_length = 15 + temp_sum_length;
//                                        re_width = s5.ToDouble()*2 + 15*2;
//                                        re_length = 10 + temp_sum_length;
//                                        re_width = s5.ToDouble()*2 + 10*2;
                                        re_length = 6 + temp_sum_length;
                                        re_width = s5.ToDouble()*2 + 8*2;
                                    }

                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+3].serno, plate2[si+3].location ,plate2[si+3].grade, plate2[si+3].thk,
                                                plate2[si+3].width, plate2[si+3].length ,plate2[si+3].pqty, plate2[si+3].cqty,plate2[si+3].sqty);

                                    si = si+3;
                                break;
                            }
                            //
                        }
                    }
                    else{  // 길이를 기준으로 계산하는 조건일때.     // 10500, 12500, 14000
                        cont_length_flag = 0;
                        temp_sum_width = s5.ToDouble();
                        fprintf(fs,"check==>길이 기준 length=%f\n", s6.ToDouble());
                        if(s6.ToDouble() <= base_length){
                            fprintf(fs,"check==>길이 기준 7000이하일때 l_flag=%d, w_flag=%d\n", l_flag, w_flag);
                            switch(l_flag){
                                case 1:
                                    if(w_flag == 1){ // 단독 조건일때

                                        pt_cnt = plate2[si].pqty.ToInt();
                                        ct_cnt = plate2[si].cqty.ToInt();
                                        st_cnt = plate2[si].sqty.ToInt();

                                        temp_sum_cnt = pt_cnt+ct_cnt+st_cnt;
                                        temp_sum_length = s6.ToDouble()*(pt_cnt+ct_cnt+st_cnt);

                                        if( (pt_cnt+ct_cnt+st_cnt) % 2 == 1){      // 갯수가 홀수일때

                                            plength = s6.ToDouble()* pt_cnt;
                                            if( ( 10500 - plength >= 50  &&  10500 - plength <= 500 ) ||
                                                ( 12500 - plength >= 50  &&  12500 - plength <= 500 ) ||
                                                ( 14000 - plength >= 50  &&  14000 - plength <= 500 ) )
                                            {
                                                pcnt = 1;
                                                re_pcnt = 0;
                                            }
                                            else{
                                                if(plength == 0.0){
                                                    pcnt= 0;
                                                    re_pcnt = 0;
                                                }
                                                else{
                                                    if(plength > 14000){
                                                        pcnt = 1;
                                                        re_pcnt = int( (plength-14000)/s6.ToDouble() +0.5);
                                                        plength = s6.ToDouble()*(pt_cnt-1);
                                                    }
                                                    else if(plength >= base_length && plength < 14000){
                                                        pcnt = 1;
                                                    }
                                                    else{
                                                        re_pcnt = pt_cnt;
                                                    }
                                                }
                                            }

                                            clength = s6.ToDouble()* ct_cnt;
                                            if( ( 10500 - clength >= 50  &&  10500 - clength <= 500 ) ||
                                                ( 12500 - clength >= 50  &&  12500 - clength <= 500 ) ||
                                                ( 14000 - clength >= 50  &&  14000 - clength <= 500 ) )
                                            {
                                                ccnt = 1;
                                                re_ccnt = 0;
                                            }
                                            else{
                                                if(clength == 0.0){
                                                    ccnt= 0;
                                                    re_ccnt = 0;
                                                }
                                                else{
                                                    if(clength > 14000){
                                                        ccnt = 1;
                                                        re_ccnt = int( (clength-14000)/s6.ToDouble() +0.5);
                                                        clength = s6.ToDouble()*(ct_cnt-1);
                                                    }
                                                    else if(clength >= base_length && clength < 14000){
                                                        ccnt = 1;
                                                    }
                                                    else{
                                                        re_ccnt = ct_cnt;
                                                    }
                                                }
                                            }

                                            slength = s6.ToDouble()* st_cnt;
                                            if( ( 10500 - slength >= 50  &&  10500 - slength <= 500 ) ||
                                                ( 12500 - slength >= 50  &&  12500 - slength <= 500 ) ||
                                                ( 14000 - slength >= 50  &&  14000 - slength <= 500 ) )
                                            {
                                                scnt = 1;
                                                re_scnt = 0;
                                            }
                                            else{
                                                if(slength == 0.0){
                                                    scnt= 0;
                                                    re_scnt = 0;
                                                }
                                                else{
                                                    if(slength > 14000){
                                                        scnt = 1;
                                                        re_scnt = int( (slength-14000)/s6.ToDouble() +0.5);
                                                        slength = s6.ToDouble()*(st_cnt-1);
                                                    }
                                                    else if(slength >= base_length && slength < 14000){
                                                        scnt = 1;
                                                    }
                                                    else{
                                                        re_scnt = st_cnt;
                                                    }
                                                }
                                            }

                                            temp_sum_rcnt = re_pcnt + re_ccnt + re_scnt;
                                            rlength =  temp_sum_rcnt*s6.ToDouble();

                                            if(temp_sum_rcnt == 0){
                                                if( temp_sum_length == plength || temp_sum_length == clength  || temp_sum_length == slength){
                                                    re_count = pcnt + ccnt + scnt;
                                                    if(sta_flag == 1){
//                                                        re_length = s6.ToDouble()*(pt_cnt+ct_cnt+st_cnt) + 30 + 3*(pt_cnt+ct_cnt+st_cnt-1);
                                                        re_length = s6.ToDouble()*(pt_cnt+ct_cnt+st_cnt) + 15 + 3*(pt_cnt+ct_cnt+st_cnt-1);
                                                    }
                                                    else{
//                                                        re_length = s6.ToDouble()*(pt_cnt+ct_cnt+st_cnt) + 15*(pt_cnt+ct_cnt+st_cnt);
//                                                        re_length = s6.ToDouble()*(pt_cnt+ct_cnt+st_cnt) + 10*(pt_cnt+ct_cnt+st_cnt);
                                                        re_length = s6.ToDouble()*(pt_cnt+ct_cnt+st_cnt) + 6*(pt_cnt+ct_cnt+st_cnt);
                                                    }
                                                }
                                                else{
                                                    re_count = pcnt + ccnt + scnt;
                                                    if(sta_flag == 1){
//                                                        re_length = s6.ToDouble()*re_count + 30 + 3*(re_count-1);
                                                        re_length = s6.ToDouble()*re_count + 15 + 3*(re_count-1);
                                                    }
                                                    else{
//                                                        re_length = s6.ToDouble()*re_count + 15*re_count;
//                                                        re_length = s6.ToDouble()*re_count + 10*re_count;
                                                        re_length = s6.ToDouble()*re_count + 6*re_count;
                                                    }
                                                }
                                            }
                                            else{
                                                if( ( 10500 - rlength >= 50  &&  10500 - rlength <= 500 ) ||
                                                    ( 12500 - rlength >= 50  &&  12500 - rlength <= 500 ) ||
                                                    ( 14000 - rlength >= 50  &&  14000 - rlength <= 500 ) )
                                                {
                                                    rcnt = 1;
                                                    re_rcnt = 0;
                                                }
                                                else{
                                                    if(rlength == 0.0){
                                                        scnt= 0;
                                                        re_rcnt = 0;
                                                    }
                                                    else{
                                                        if(rlength > 14000){
                                                            rcnt = 1;
                                                            re_rcnt = int( (rlength-14000)/s6.ToDouble() +0.5);
                                                        }
                                                        else if(rlength >= base_length && rlength < 14000){
                                                            rcnt = 1;
                                                        }
                                                    }
                                                }
                                                cont_flag = 0;
                                                if(plength > 0){
                                                    if(fabs(plength-rlength) < 50){
                                                        cont_flag = 0;
//                                                        if(rlength < 7000){
                                                        if(rlength < atof(MainForm->Edit_Base_Length->Text.c_str())){
                                                            re_count = re_pcnt + re_ccnt + re_scnt + re_rcnt;
                                                        }
                                                        else    re_count = pcnt + ccnt + scnt + rcnt;
                                                        if(sta_flag == 1){
//                                                            re_length = s6.ToDouble()*re_count + 30 + 3*(re_count-1);
                                                            re_length = s6.ToDouble()*re_count + 15 + 3*(re_count-1);
                                                        }
                                                        else{
//                                                            re_length = s6.ToDouble()*re_count + 15*re_count;
//                                                            re_length = s6.ToDouble()*re_count + 10*re_count;
                                                            re_length = s6.ToDouble()*re_count + 6*re_count;
                                                        }
                                                    }
                                                    else{
                                                        cont_flag = 1;
                                                        re_count = pcnt+ccnt+scnt;
                                                        if(sta_flag == 1){
//                                                            re_length = plength + 30 + 3*(re_count-1);
                                                            re_length = plength + 15 + 3*(re_count-1);
                                                        }
                                                        else{
//                                                            re_length = plength + 15*re_count;
//                                                            re_length = plength + 10*re_count;
                                                            re_length = plength + 6*re_count;
                                                        }
                                                    }
                                                }
                                                else{
                                                    if(clength > 0){
                                                        if(fabs(clength-rlength) < 50){
                                                            cont_flag = 0;
//                                                            if(rlength < 7000){   hyun
                                                            if(rlength < atof(MainForm->Edit_Base_Length->Text.c_str())){
                                                                re_count = re_pcnt + re_ccnt + re_scnt + re_rcnt;
                                                            }
                                                            else re_count = pcnt + ccnt + scnt + rcnt;
                                                            if(sta_flag == 1){
//                                                                 re_length = s6.ToDouble()*re_count + 30 + 3*(re_count-1);
                                                                 re_length = s6.ToDouble()*re_count + 15 + 3*(re_count-1);
                                                            }
                                                            else{
//                                                                 re_length = s6.ToDouble()*re_count + 15*re_count;
//                                                                 re_length = s6.ToDouble()*re_count + 10*re_count;
                                                                 re_length = s6.ToDouble()*re_count + 6*re_count;
                                                            }
                                                        }
                                                        else{
                                                            cont_flag = 1;
                                                            re_count = pcnt+ccnt+scnt;
                                                            if(sta_flag == 1){
//                                                                re_length = clength + 30 + 3*(re_count-1);
                                                                re_length = clength + 15 + 3*(re_count-1);
                                                            }
                                                            else{
//                                                                re_length = clength + 15*re_count;
//                                                                re_length = clength + 10*re_count;
                                                                re_length = clength + 6*re_count;
                                                            }
                                                        }
                                                    }
                                                    else{
                                                        if(fabs(slength-rlength) < 50){
                                                            cont_flag = 0;
//                                                            if(rlength < 7000){   //hyun
                                                            if(rlength < atof(MainForm->Edit_Base_Length->Text.c_str())){
                                                                re_count = re_pcnt + re_ccnt + re_scnt + re_rcnt;
                                                            }
                                                            else re_count = pcnt + ccnt + scnt + rcnt;
                                                            if(sta_flag == 1){
//                                                                 re_length = s6.ToDouble()*re_count + 30 + 3*(re_count-1);
                                                                 re_length = s6.ToDouble()*re_count + 15 + 3*(re_count-1);
                                                            }
                                                            else{
//                                                                 re_length = s6.ToDouble()*re_count + 15*re_count;
//                                                                 re_length = s6.ToDouble()*re_count + 10*re_count;
                                                                 re_length = s6.ToDouble()*re_count + 6*re_count;
                                                            }
                                                        }
                                                        else{
                                                            cont_flag = 1;
                                                            re_count = pcnt+ccnt+scnt;
                                                            if(sta_flag == 1){
//                                                                re_length = slength + 30 + 3*(re_count-1);
                                                                re_length = slength + 15 + 3*(re_count-1);
                                                            }
                                                            else{
//                                                                re_length = slength + 15*re_count;
//                                                                re_length = slength + 10*re_count;
                                                                re_length = slength + 6*re_count;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else{   // 부재갯수가 짝수일 경우..........
                                            temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                            temp_cnt = temp_sum_cnt/2;
                                            temp_sum_length = s6.ToDouble()*temp_sum_cnt;

                                            if(temp_sum_length > 20000){                                // 45550
                                                ratio = (temp_sum_length /temp_cnt)/s5.ToDouble();  // ratio = (45550/5) / 1788
                                                if( ratio < 6 ){
                                                    re_count = temp_sum_cnt/2;
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length/temp_cnt + 30 + 3*(re_count-1);
                                                        re_length = temp_sum_length/temp_cnt + 15 + 3*(re_count-1);
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length/temp_cnt + 30;
//                                                        re_length = temp_sum_length/temp_cnt + 20;
                                                        re_length = temp_sum_length/temp_cnt + 12;
                                                    }
                                                }
                                                else if(s6.ToDouble()*temp_cnt < 20000)                 //구문 추가 현성열
                                                {
                                                    re_count = temp_sum_cnt/2;
                                                    if(sta_flag == 1){
//                                                        re_length = s6.ToDouble()*temp_cnt + 30;
                                                        re_length = s6.ToDouble()*temp_cnt + 15;
                                                    }
                                                    else{
//                                                        re_length = s6.ToDouble()*temp_cnt + 30;
//                                                        re_length = s6.ToDouble()*temp_cnt + 20;
                                                        re_length = s6.ToDouble()*temp_cnt + 12;
                                                    }
                                                }
                                                else{
                                                    re_count = temp_sum_cnt;
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length/temp_sum_cnt + 30 + 3*(re_count-1);
                                                        re_length = temp_sum_length/temp_sum_cnt + 15 + 3*(re_count-1);
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length/temp_sum_cnt + 15;
//                                                        re_length = temp_sum_length/temp_sum_cnt + 10;
                                                        re_length = temp_sum_length/temp_sum_cnt + 12;
                                                    }
                                                }
                                            }
                                            else{
                                                re_count = 1;
//                                                if(sta_flag == 1)   re_length = s6.ToDouble()*temp_sum_cnt + 30 + 3*(temp_sum_cnt-1);
                                                if(sta_flag == 1)   re_length = s6.ToDouble()*temp_sum_cnt + 15 + 3*(temp_sum_cnt-1);
//                                                else                re_length = s6.ToDouble()*temp_sum_cnt + 15*temp_sum_cnt;
//                                                else                re_length = s6.ToDouble()*temp_sum_cnt + 10*temp_sum_cnt;
                                                else                re_length = s6.ToDouble()*temp_sum_cnt + 6*temp_sum_cnt;
                                            }
                                        }
//                                        if(sta_flag == 1)   re_width = temp_sum_width +10;
                                        if(sta_flag == 1)   re_width = temp_sum_width +8;
//                                        else                re_width = temp_sum_width +15;
//                                        else                re_width = temp_sum_width +10;
                                        else                re_width = temp_sum_width +8;

                                        if(cont_flag == 1){
                                            if(temp_sum_rcnt*s6.ToDouble() < 20000){
                                                ratio = temp_sum_rcnt*s6.ToDouble()/s5.ToDouble();
                                                if(ratio > 6 && // (pt_cnt == ct_cnt && pt_cnt == st_cnt) &&
                                                    ( temp_sum_rcnt*s6.ToDouble() >  plength  ||
                                                      temp_sum_rcnt*s6.ToDouble() >  clength  ||
                                                      temp_sum_rcnt*s6.ToDouble() >  slength ) )
                                                {
                                                    if( fabs(temp_sum_rcnt*s6.ToDouble() - plength) > 5000 ||
                                                        fabs(temp_sum_rcnt*s6.ToDouble() - clength) > 5000 ||
                                                        fabs(temp_sum_rcnt*s6.ToDouble() - slength) > 5000 )
                                                    {
                                                        re_count++;
                                                        cont_length_flag = 1;
                                                    }
                                                }   else cont_length_flag = 0;
                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);

                                            if(temp_sum_rcnt*s6.ToDouble() < 20000){

                                                re_count = 1;
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_rcnt*s6.ToDouble() + 30 + 3*(temp_sum_rcnt-1);
                                                    re_length = temp_sum_rcnt*s6.ToDouble() + 15 + 3*(temp_sum_rcnt-1);

                                                    if(cont_length_flag == 1){
                                                        if(plength > 0){
                                                            re_length = re_length - plength;
                                                        }
                                                        else{
                                                            if(clength > 0){
                                                                re_length = re_length - clength;
                                                            }
                                                            else{
                                                                if(slength > 0)   re_length = re_length - slength;
                                                            }
                                                        }
                                                    }
//                                                    re_width = temp_sum_width +10;
                                                    re_width = temp_sum_width +8;
                                                }
                                                else{
                                                    re_length = temp_sum_rcnt*s6.ToDouble();

                                                    if(cont_length_flag == 1){
                                                        if(plength > 0){
                                                            re_length = re_length - plength;
//                                                            re_length = re_length + 15;
//                                                            re_length = re_length + 10;
                                                            re_length = re_length + 6;
                                                        }
                                                        else{
                                                            if(clength > 0){
                                                                re_length = re_length - clength;
//                                                                re_length = re_length + 15;
//                                                                re_length = re_length + 10;
                                                                re_length = re_length + 6;
                                                            }
                                                            else{
                                                                if(slength > 0){
                                                                    re_length = re_length - slength;
//                                                                    re_length = re_length + 15;
//                                                                    re_length = re_length + 10;
                                                                    re_length = re_length + 6;
                                                                }
                                                            }
                                                        }
                                                    }
//                                                    re_width = temp_sum_width +15;
//                                                    re_width = temp_sum_width +10;
                                                    re_width = temp_sum_width +8;
                                                }
                                            }

                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10.SubString(1,3)+"0"+String(seqno);
                                            sno = s1.ToInt()+1;
                                            s1 = String(sno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,99,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(), s10.c_str(),s11.c_str(), width, length, re_count);
                                            /*
                                            if(plate2[si-1].geyel_seqno.Length() > 0){
                                                plate2[si-1].geyel_seqno = "중복";
                                                ShowMessage(AnsiString(c_porfile)+"에서 배치된 취재 정보를 Write할때 중복이 발생합니다.");
                                                //ShowMessage("배치된 취재 정보를 Write할때 중복이 발생합니다.");
                                            }
                                            */
                                        }
                                        else{
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);

                                        }
                                    }
                                    else if(w_flag == 2){  // 폭이 같은 조건일때.
                                        fprintf(fs,"check==>폭 1750이상, 길이 7000 이하 조건에서 폭이 같은 조건 2일때 c_flag=%d\n", c_flag);
                                        sum_cnt1 = plate2[si].pqty.ToInt() + plate2[si].cqty.ToInt() + plate2[si].sqty.ToInt();
                                        sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                        temp_sum_cnt = sum_cnt1 + sum_cnt2;
                                        if(c_flag == 2){   // 부재갯수가 대칭으로 두개가 같은 조건일때..
                                            //pt_cnt = plate2[si].pqty.ToInt();
                                            //st_cnt = plate2[si].sqty.ToInt();
                                            temp_sum_length = s6.ToDouble()*sum_cnt1;
                                            ratio = temp_sum_length / s5.ToDouble();

                                            if(temp_sum_length > 20000 || ratio > 6){    // 첫줄의 길이*갯수 가 20000이상이거나 폭대 길이비기 6이상이 되면.
                                                re_count = (int)(temp_sum_length/10000);

                                                if(sta_flag == 1){
//                                                    re_length = s6.ToDouble()*(plate2[si].pqty.ToInt()) + 30 +(plate2[si].pqty.ToInt()-1)*3;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = s6.ToDouble()*(plate2[si].pqty.ToInt()) + 15 +(plate2[si].pqty.ToInt()-1)*3;
                                                    re_width = s5.ToDouble() +8;
                                                }
                                                else{
//                                                    re_length = s6.ToDouble()*plate2[si].pqty.ToInt()+ 15*(plate2[si].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +15;
//                                                    re_length = s6.ToDouble()*plate2[si].pqty.ToInt()+ 10*(plate2[si].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = s6.ToDouble()*plate2[si].pqty.ToInt()+ 6*(plate2[si].pqty.ToInt());
                                                    re_width = s5.ToDouble() +8;
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                if(length > 20000)
                                                {
                                                    re_count = sum_cnt1/2;
                                                    length = length/2;
                                                }
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            }
                                            else{
                                                temp_sum_length = s6.ToDouble() + plate2[si+1].length.ToDouble();
                                                ratio = temp_sum_length / s5.ToDouble();
                                                if( ratio < 3){   // 위아래 길이를 합한 조건이 폭대 길이 조건으로 3보다 작을때.
                                                    temp_sum_length =  s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2;
                                                    ratio = temp_sum_length /s5.ToDouble();

                                                    if(ratio <= 6 && temp_sum_length < 20000){
                                                        re_count = 1;
                                                        if(sta_flag == 1){
//                                                            re_length = temp_sum_length + 30 +(temp_sum_cnt-1)*3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 15 +(temp_sum_cnt-1)*3;
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        else{
//                                                            re_length = temp_sum_length + 15*(temp_sum_cnt);
//                                                            re_width = s5.ToDouble() +15;
//                                                            re_length = temp_sum_length + 10*(temp_sum_cnt);
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 6*(temp_sum_cnt);
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        width = int(re_width);
                                                        length = int(re_length);
                                                        seqno++;
                                                        s10 = s10+"0"+String(seqno);
                                                        plate2_dwg_save_info(s10, si);
                                                        dwg_seqno++;
                                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                            plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                            plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                        si = si+1;
                                                    }
                                                    else if(ratio > 6  || temp_sum_length > 20000){
                                                        if( temp_sum_length > 20000 ){
                                                            re_count = int(temp_sum_length/10000);
                                                        }
                                                        else re_count = temp_sum_cnt/2;

                                                        if(sta_flag == 1){
//                                                            re_length = temp_sum_length/2 + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length/2 + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        else{
//                                                            re_length = temp_sum_length/2 + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                            re_width = s5.ToDouble() +15;
//                                                            re_length = temp_sum_length/2 + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length/2 + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        width = int(re_width);
                                                        length = int(re_length);
                                                        seqno++;
                                                        s10 = s10+"0"+String(seqno);
                                                        plate2_dwg_save_info(s10, si);
                                                        dwg_seqno++;
                                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                            plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                            plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                        si = si+1;

                                                    }
                                                    else{
                                                        ShowMessage("처리하기 힘든 경우입니다. 2805로 전화주세요");
                                                    }
                                                }
                                                else{   //위아래 길이를 합한 조건이 폭대 길이 조건으로 3보다 클때.
                                                    temp_sum_length = s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2;
                                                    if(temp_sum_length < 20000){
                                                        re_count = 1;
                                                        if(sta_flag == 1){
//                                                            re_length = temp_sum_length + 30 +(temp_sum_cnt-1)*3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 15 +(temp_sum_cnt-1)*3;
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        else{
//                                                            re_length = temp_sum_length + 15*(temp_sum_cnt);
//                                                            re_width = s5.ToDouble() +15;
//                                                            re_length = temp_sum_length + 10*(temp_sum_cnt);
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 6*(temp_sum_cnt);
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        width = int(re_width);
                                                        length = int(re_length);
                                                        seqno++;
                                                        s10 = s10+"0"+String(seqno);
                                                        plate2_dwg_save_info(s10, si);
                                                        dwg_seqno++;
                                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                            plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                            plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                        si = si+1;
                                                    }
                                                    else if( temp_sum_length > 20000){
                                                        re_count = temp_sum_cnt/2;

                                                        if(sta_flag == 1){
                                                            if(temp_sum_length/2 > 20000){
//                                                                re_length = temp_sum_length/int(temp_sum_length/10000) + 30 +(re_count-1)*3;
                                                                re_length = temp_sum_length/int(temp_sum_length/10000) + 15 +(re_count-1)*3;
                                                            }
//                                                            else  re_length = temp_sum_length/2 + 30 +(re_count-1)*3;
                                                            else  re_length = temp_sum_length/2 + 15 +(re_count-1)*3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_width = s5.ToDouble() +8;

                                                        }
                                                        else{
                                                            if(temp_sum_length/2 > 20000){
//                                                                re_length = temp_sum_length/int(temp_sum_length/10000) + 15*(re_count);
//                                                                re_length = temp_sum_length/int(temp_sum_length/10000) + 10*(re_count);
                                                                re_length = temp_sum_length/int(temp_sum_length/10000) + 6*(re_count);
                                                            }
//                                                            else re_length = temp_sum_length/2 + 15*(re_count);
//                                                            else re_length = temp_sum_length/2 + 10*(re_count);
                                                            else re_length = temp_sum_length/2 + 6*(re_count);
//                                                            re_width = s5.ToDouble() +15;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        width = int(re_width);
                                                        length = int(re_length);
                                                        seqno++;
                                                        s10 = s10+"0"+String(seqno);
                                                        plate2_dwg_save_info(s10, si);
                                                        dwg_seqno++;
                                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                            plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                            plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                        si = si+1;

                                                    }
                                                    else{
                                                        ShowMessage("처리하기 힘든 경우입니다. 2805로 전화주세요");
                                                    }
                                                    // 위아래 길이를 합한 조건이 폭대 길이 조건으로 3보다 작을때.
                                                }
                                            }
                                        }
                                        else{     // W_FLAG 가 2인데 대칭이 아닐 때.
                                            temp_sum_length = s6.ToDouble()*sum_cnt1;
                                            if(temp_sum_length > 7000){
                                                re_count = 1;
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 +(sum_cnt1-1)*3;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 15 +(sum_cnt1-1)*3;
                                                    re_width = s5.ToDouble() +8;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*sum_cnt1;
//                                                    re_width = s5.ToDouble() +15;
//                                                    re_length = temp_sum_length + 10*sum_cnt1;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 6*sum_cnt1;
                                                    re_width = s5.ToDouble() +8;
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                    s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            }
                                            else{
                                                temp_sum_length = s6.ToDouble() + plate2[si+1].length.ToDouble();
                                                fprintf(fs,"check==>폭이 같은 조건 2일때 갯수 대칭이 아닐때 temp_sum_length=%.f\n", temp_sum_length);


                                                if(temp_sum_length > base_length){   // 길이 두개를 더한 값이 7000 보다 컸을때.
                                                    sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                                    temp_sum_cnt = sum_cnt1 + sum_cnt2;


                                                    if( (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) >  20000 ){
                                                        re_count = temp_sum_cnt/2;
//                                                        if(sta_flag == 1)   re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 30 + 3*(re_count-1);
                                                        if(sta_flag == 1)   re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 15 + 3*(re_count-1);
//                                                        else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 15*re_count;
//                                                        else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 10*re_count;
                                                        else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 6*re_count;
                                                    }
                                                    else{
                                                        temp_sum_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2);

                                                        ratio = temp_sum_length/s5.ToDouble();

                                                        if(ratio > 6 &&  (temp_sum_length/2) > base_length){
                                                            re_count = 2;
                                                            if(sta_flag == 1){
//                                                                re_length = ((s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 30 + 3*(temp_sum_cnt-1))/2;
                                                                re_length = ((s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15 + 3*(temp_sum_cnt-1))/2;
                                                            }
                                                            else{
//                                                                re_length = ((s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15*temp_sum_cnt)/2;
//                                                                re_length = ((s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 10*temp_sum_cnt)/2;
                                                                re_length = ((s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 6*temp_sum_cnt)/2;
                                                            }

                                                        }
                                                        else{
                                                            re_count = 1;
                                                            if(sta_flag == 1){
//                                                                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 30 + 3*(temp_sum_cnt-1);
                                                                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15 + 3*(temp_sum_cnt-1);
                                                            }
                                                            else{
//                                                                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15*temp_sum_cnt;
//                                                                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 10*temp_sum_cnt;
                                                                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 6*temp_sum_cnt;
                                                            }
                                                        }
                                                    }
                                                }
                                                else{
                                                    sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                                    temp_sum_cnt = sum_cnt1 + sum_cnt2;
                                                    if( (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) >  20000 ){
                                                        re_count = 2;
//                                                        if(sta_flag == 1)   re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 30 +3*(re_count-1);
//                                                        else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 15*re_count;
                                                        if(sta_flag == 1)   re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 15 +3*(re_count-1);
//                                                        else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 10*re_count;
                                                        else                re_length = s6.ToDouble()+ plate2[si+1].length.ToDouble() + 6*re_count;
                                                    }
                                                    else{
                                                        re_count = 1;
//                                                        if(sta_flag == 1)   re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 30 + 3*(temp_sum_cnt-1);
//                                                        else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15*temp_sum_cnt;
                                                        if(sta_flag == 1)   re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 15 + 3*(temp_sum_cnt-1);
//                                                        else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 10*temp_sum_cnt;
                                                        else                re_length = (s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2) + 6*temp_sum_cnt;
                                                    }

                                                }
//                                                if(sta_flag == 1)   re_width = temp_sum_width +10;
//                                                else                re_width = temp_sum_width +15;
                                                if(sta_flag == 1)   re_width = temp_sum_width +8;
//                                                else                re_width = temp_sum_width +10;
                                                else                re_width = temp_sum_width +8;
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                    s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                        plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                        plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                si = si+1;
                                            }
                                        }
                                    }
                                    else if(w_flag == 3){  // 폭이 같은 조건일때.
                                        fprintf(fs,"check==>폭이 같은 조건 3일때 c_flag=%d\n", c_flag);
                                        if(c_flag == 2){    // 부재갯수 대칭조건이 2이면.

                                            temp_sum_length = s6.ToDouble()*plate2[si].pqty.ToInt()*2;

                                            ratio = temp_sum_length / s5.ToDouble();
                                            if(ratio > 6){
                                                if(temp_sum_length > 20000){
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length + 30 +((plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt()/2)-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 15 +((plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt()/2)-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length + 15*((plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt())/2);
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length + 10*((plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt())/2);
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 6*((plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt())/2);
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                }
                                                else{
                                                    if(temp_sum_length/2 > base_length && ratio > 4){
                                                        if(sta_flag == 1){
//                                                            re_length = s6.ToDouble()*plate2[si].pqty.ToInt()+ 30 + 3*(plate2[si].pqty.ToInt()-1);
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = s6.ToDouble()*plate2[si].pqty.ToInt()+ 15 + 3*(plate2[si].pqty.ToInt()-1);
                                                            re_width = s5.ToDouble() +8;
                                                            re_count = 2;
                                                        }
                                                        else{
//                                                            re_length = s6.ToDouble()*plate2[si].pqty.ToInt()+ 15*plate2[si].pqty.ToInt();
//                                                            re_width = s5.ToDouble() +15;
//                                                            re_length = s6.ToDouble()*plate2[si].pqty.ToInt()+ 10*plate2[si].pqty.ToInt();
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = s6.ToDouble()*plate2[si].pqty.ToInt()+ 6*plate2[si].pqty.ToInt();
                                                            re_width = s5.ToDouble() +8;
                                                            re_count = 2;
                                                        }
                                                    }
                                                    else{
                                                        if(sta_flag == 1){
//                                                            re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt()-1)*3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt()-1)*3;
                                                            re_width = s5.ToDouble() +8;
                                                            re_count = 1;
                                                        }
                                                        else{
//                                                            re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt());
//                                                            re_width = s5.ToDouble() +15;
//                                                            re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt());
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si].sqty.ToInt());
                                                            re_width = s5.ToDouble() +8;
                                                            re_count = 1;
                                                        }
                                                    }
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                    s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            }
                                            else{
                                                temp_sum_length = s6.ToDouble()*plate2[si].pqty.ToInt() + plate2[si+1].length.ToDouble()*plate2[si+1].pqty.ToInt();
                                                if(temp_sum_length > 20000){
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }

                                                }
                                                else{
                                                    ratio = temp_sum_length*2 / s5.ToDouble();  // 길이대 폭 비율
                                                    if(ratio > 6){                           // 비율이 6이상이면 두개로 나눠라..
                                                        if(sta_flag == 1){
//                                                            re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
                                                            re_width = s5.ToDouble() +8;
                                                            re_count = 2;
                                                        }
                                                        else{
//                                                            re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                            re_width = s5.ToDouble() +15;
//                                                            re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
                                                            re_width = s5.ToDouble() +8;
                                                            re_count = 2;
                                                        }
                                                    }
                                                    else{                                 // 비율이 6이하이면 한개로 합해라.
                                                        if(sta_flag == 1){
//                                                            re_length = temp_sum_length*2 + 30 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt())*2-1)*3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length*2 + 15 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt())*2-1)*3;
                                                            re_width = s5.ToDouble() +8;
                                                            re_count = 1;
                                                        }
                                                        else{
//                                                            re_length = temp_sum_length*2 + 15*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                            re_width = s5.ToDouble() +15;
//                                                            re_length = temp_sum_length*2 + 10*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length*2 + 6*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
                                                            re_width = s5.ToDouble() +8;
                                                            re_count = 1;
                                                        }
                                                    }
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                    s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                    plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                    plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                si = si+1;
                                            }

                                        }
                                        else if(c_flag == 3 ){    // 부재갯수 대칭조건이 3이면.
                                            temp_sum_length = s6.ToDouble()*plate2[si].pqty.ToInt() + plate2[si+1].length.ToDouble()*plate2[si+1].pqty.ToInt()
                                                              + plate2[si+2].length.ToDouble()*plate2[si+2].pqty.ToInt();
                                            fprintf(fs,"check==>폭이 같은 조건 3일때 temp_sum_length=%d\n", temp_sum_length);
                                            if(temp_sum_length > 20000){
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()-1)*3;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()-1)*3;
                                                    re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +15;
//                                                    re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
                                                    re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                            }
                                            else{
                                                ratio = temp_sum_length*2 / s5.ToDouble();  // 길이대 폭 비율
                                                if(ratio > 6){                           // 비율이 6이상이면 두개로 나눠라..
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
                                                        re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
                                                        re_width = s5.ToDouble() +10;
                                                        re_count = 2;
                                                    }
                                                }
                                                else{                                 // 비율이 6이하이면 한개로 합해라.
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length*2 + 30 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt())*2-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length*2 + 15 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt())*2-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 1;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length*2 + 15*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length*2 + 10*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length*2 + 6*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 1;
                                                    }
                                                }
                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                             fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);
                                            si = si+2;

                                        }
                                        else{
                                            sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                            sum_cnt3 = plate2[si+2].pqty.ToInt() + plate2[si+2].cqty.ToInt() + plate2[si+2].sqty.ToInt();
                                            pt_cnt = plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt();
                                            ct_cnt = plate2[si].cqty.ToInt()+plate2[si+1].cqty.ToInt()+plate2[si+2].cqty.ToInt();
                                            st_cnt = plate2[si].sqty.ToInt()+plate2[si+1].sqty.ToInt()+plate2[si+2].sqty.ToInt();

                                            temp_sum_length = s6.ToDouble() + plate2[si+1].length.ToDouble() + plate2[si+2].length.ToDouble();

                                            fprintf(fs,"check==>w_flag==3일때  temp_sum_length=%d\n", temp_sum_length);
                                            if(temp_sum_length > 20000){
                                                temp_sum_length = s6.ToInt() + plate2[si+2].length.ToDouble();
//                                                re_length = temp_sum_length + 15*2;
//                                                re_length = temp_sum_length + 10*2;
                                                re_length = temp_sum_length + 6*2;
                                                re_count = 2;
//                                                re_width = s5.ToDouble() +15;
//                                                re_width = s5.ToDouble() +10;
                                                re_width = s5.ToDouble() +8;
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                    s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                    plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                    plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                si = si+1;
                                            }
                                            else{
//                                                re_length = temp_sum_length + 15*3;
//                                                re_length = temp_sum_length + 10*3;
                                                re_length = temp_sum_length + 6*3;
                                                re_count = 2;
//                                                re_width = s5.ToDouble() +15;
//                                                re_width = s5.ToDouble() +10;
                                                re_width = s5.ToDouble() +8;
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                    s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                    plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                    plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                    plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                    plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);
                                                si = si+2;
                                            }
                                        }
                                    }
                                    else if(w_flag == 4){
                                        if(c_flag == 1){
                                            sum_cnt1 = plate2[si].pqty.ToInt() + plate2[si].cqty.ToInt() + plate2[si].sqty.ToInt();
                                            sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                            temp_sum_cnt = sum_cnt1 + sum_cnt2;
                                            temp_sum_length = s6.ToDouble() +  plate2[si+1].length.ToDouble();
                                            if(temp_sum_length < 20000){
                                                re_count = temp_sum_cnt/2;
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 +(temp_sum_cnt-1)*3;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 15 +(temp_sum_cnt-1)*3;
                                                    re_width = s5.ToDouble() +8;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*temp_sum_cnt;
//                                                    re_width = s5.ToDouble() +15;
//                                                    re_length = temp_sum_length + 10*temp_sum_cnt;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 6*temp_sum_cnt;
                                                    re_width = s5.ToDouble() +8;
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                    s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                    plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                    plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                si = si+1;

                                            }
                                            else    ShowMessage("체크 요함 ");


                                        }
                                        else if(c_flag == 2){    // 부재갯수 대칭조건이 2이면.
                                            temp_sum_length = s6.ToDouble()*plate2[si].pqty.ToInt() + plate2[si+1].length.ToDouble()*plate2[si+1].pqty.ToInt();
                                            sum_cnt1 = plate2[si].pqty.ToInt() + plate2[si].cqty.ToInt() + plate2[si].sqty.ToInt();
                                            sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                            temp_sum_cnt = sum_cnt1 + sum_cnt2;
                                            if(temp_sum_length > 20000){

                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
                                                    re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +15;
//                                                    re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
                                                    re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                            }
                                            else{
                                                ratio = temp_sum_length*2 / s5.ToDouble();  // 길이대 폭 비율
                                                if(ratio > 6){                           // 비율이 6이상이면 두개로 나눠라..
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                }
                                                else{                                 // 비율이 6이하이면 한개로 합해라.
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length*2 + 30 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt())*2-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length*2 + 15 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt())*2-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 1;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length*2 + 15*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length*2 + 10*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length*2 + 6*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt());
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 1;
                                                    }
                                                }
                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                            si = si+1;

                                        }
                                        else if(c_flag == 3 ){    // 부재갯수 대칭조건이 3이면.
                                            temp_sum_length = s6.ToDouble()*plate2[si].pqty.ToInt() + plate2[si+1].length.ToDouble()*plate2[si+1].pqty.ToInt()
                                                              + plate2[si+2].length.ToDouble()*plate2[si+2].pqty.ToInt();
                                            if(temp_sum_length > 20000){
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()-1)*3;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()-1)*3;
                                                    re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +15;
                                                    re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
                                                    re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                            }
                                            else{
                                                ratio = temp_sum_length*2 / s5.ToDouble();  // 길이대 폭 비율
                                                if(ratio > 6){                           // 비율이 6이상이면 두개로 나눠라..
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length + 30 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 15 +(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                }
                                                else{                                 // 비율이 6이하이면 한개로 합해라.
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length*2 + 30 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt())*2-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length*2 + 15 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt())*2-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 1;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length*2 + 15*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length*2 + 10*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length*2 + 6*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt());
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 1;
                                                    }
                                                }
                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                             fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);
                                            si = si+2;

                                        }
                                        else if(c_flag == 4 ){    // 부재갯수 대칭조건이 4이면.
                                            temp_sum_length = s6.ToDouble()*plate2[si].pqty.ToInt() + plate2[si+1].length.ToDouble()*plate2[si+1].pqty.ToInt()
                                                              + plate2[si+2].length.ToDouble()*plate2[si+2].pqty.ToInt()
                                                              + plate2[si+3].length.ToDouble()*plate2[si+3].pqty.ToInt();
                                            if(temp_sum_length > 20000){
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 +
//                                                                (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt()-1)*3;
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 15 +
                                                                (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt()-1)*3;
                                                    re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
//                                                                                      plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +15;
//                                                    re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
//                                                                                      plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
//                                                    re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
                                                                                      plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
                                                    re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                            }
                                            else{
                                                ratio = temp_sum_length*2 / s5.ToDouble();  // 길이대 폭 비율
                                                if(ratio > 6){                           // 비율이 6이상이면 두개로 나눠라..
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length + 30 +
//                                                                    (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt()-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 15 +
                                                                    (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt()-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length + 15*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
//                                                                                          plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length + 10*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
//                                                                                          plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 6*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
                                                                                          plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 2;
                                                    }
                                                }
                                                else{                                 // 비율이 6이하이면 한개로 합해라.
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length*2 + 30 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
//                                                                                               plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt())*2-1)*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length*2 + 15 +( (plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
                                                                                               plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt())*2-1)*3;
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 1;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length*2 + 15*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
//                                                                                              plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +15;
//                                                        re_length = temp_sum_length*2 + 10*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
//                                                                                              plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length*2 + 6*2*(plate2[si].pqty.ToInt()+plate2[si+1].pqty.ToInt()+
                                                                                              plate2[si+2].pqty.ToInt()+plate2[si+3].pqty.ToInt());
                                                        re_width = s5.ToDouble() +8;
                                                        re_count = 1;
                                                    }
                                                }
                                            }
                                            width = int(re_width);
                                            length = int(re_length);
                                            seqno++;
                                            s10 = s10+"0"+String(seqno);
                                            plate2_dwg_save_info(s10, si);
                                            dwg_seqno++;
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                             fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);
                                             fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+3].serno, plate2[si+3].location ,plate2[si+3].grade, plate2[si+3].thk,
                                                plate2[si+3].width, plate2[si+3].length ,plate2[si+3].pqty, plate2[si+3].cqty,plate2[si+3].sqty);
                                            si = si+3;

                                        }
                                        else{
                                            sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                            temp_sum_length = s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2;
                                            if(temp_sum_length > 19000){
                                                temp_sum_length = temp_sum_length/2;

                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 +((sum_cnt1+sum_cnt2)/2)*3;
//                                                    re_width = re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 15 +((sum_cnt1+sum_cnt2)/2)*3;
                                                    re_width = re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15*((sum_cnt1+sum_cnt2)/2);
//                                                    re_width = re_width = s5.ToDouble() +15;
//                                                    re_length = temp_sum_length + 10*((sum_cnt1+sum_cnt2)/2);
//                                                    re_width = re_width = s5.ToDouble() +10;
                                                    re_length = temp_sum_length + 6*((sum_cnt1+sum_cnt2)/2);
                                                    re_width = re_width = s5.ToDouble() +8;
                                                    re_count = 2;
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                    s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                    plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                    plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                si = si+1;
                                            }
                                            else{
                                                si = si+3;
                                            }
                                        }
                                    }
                                break;
                                case 2:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt();
                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                    temp_sum_length = s6.ToDouble()*temp_sum_cnt;
                                    ratio = temp_sum_length/s5.ToDouble();
                                    if( temp_sum_length > 20000 || ratio > 6){
                                        re_count = 2;
//                                        if(sta_flag == 1)   re_length = temp_sum_length/2 + 30 +3*(re_count-1);
//                                        else                re_length = temp_sum_length/2 + 15*re_count;
                                        if(sta_flag == 1)   re_length = temp_sum_length/2 + 15 +3*(re_count-1);
                                        else                re_length = temp_sum_length/2 + 7.5*re_count;
                                    }
                                    else{
                                        re_count = 1;
//                                        if(sta_flag == 1)   re_length = temp_sum_length + 30 + 3*(temp_sum_cnt-1);
//                                        else                re_length = temp_sum_length + 15*temp_sum_cnt;
                                        if(sta_flag == 1)   re_length = temp_sum_length + 15 + 3*(temp_sum_cnt-1);
                                    //    else                re_length = temp_sum_length + 7.5*temp_sum_cnt;
                                        else                re_length = temp_sum_length + 6*temp_sum_cnt;
                                    }
                                    if(re_length>20000)
                                    {
//                                        re_length = re_length - 30;
//                                        re_length = re_length / 2;
//                                        re_count = 4;
//                                        re_length = re_length + 30;
                                        re_length = re_length - 20;
                                        re_length = re_length / 2;
                                        re_count = 4;
                                        re_length = re_length + 20;
                                    }

                                    if(re_length>20000)
                                    {
//                                        re_length = re_length - 30;
//                                        re_length = re_length / 2;
//                                        re_length = re_length + 30;
//                                        re_count = 8;
                                        re_length = re_length - 20;
                                        re_length = re_length / 2;
                                        re_length = re_length + 20;
                                        re_count = 8;
                                    }                                           //hyun
//                                    if(sta_flag == 1)   re_width = temp_sum_width +10;
//                                    else                re_width = temp_sum_width +15;
                                    if(sta_flag == 1)   re_width = temp_sum_width +8;
//                                    else                re_width = temp_sum_width +10;
                                    else                re_width = temp_sum_width +8;
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                    si = si+1;

                                break;
                                case 3:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt();
                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                    temp_sum_length = s6.ToDouble()*temp_sum_cnt;
                                    if( temp_sum_length > 20000){
                                        re_count = 2;
//                                        if(sta_flag)    re_length = temp_sum_length/2 + 30 + 3*(re_count-1);
//                                        else            re_length = temp_sum_length/2 + 15*re_count;
                                        if(sta_flag)    re_length = temp_sum_length/2 + 15 + 3*(re_count-1);
//                                        else            re_length = temp_sum_length/2 + 10*re_count;
                                        else            re_length = temp_sum_length/2 + 6*re_count;
                                    }
                                    else{
                                        re_count = 1;
//                                        if(sta_flag)    re_length = temp_sum_length + 30 + 3*(temp_sum_cnt-1);
//                                        else            re_length = temp_sum_length + 15*temp_sum_cnt;
                                        if(sta_flag)    re_length = temp_sum_length + 15 + 3*(temp_sum_cnt-1);
//                                        else            re_length = temp_sum_length + 10*temp_sum_cnt;
                                        else            re_length = temp_sum_length + 6*temp_sum_cnt;
                                    }
//                                    re_width = temp_sum_width +15;
                                    re_width = temp_sum_width +8;
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                    si = si+2;

                                break;
                                case 4:
                                    fprintf(fs,"check==>w_flag=4일때 \n");
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt() + plate2[si+3].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt() + plate2[si+3].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt() + plate2[si+3].sqty.ToInt();

                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;

                                    fprintf(fs,"check==>pt_cnt=%d, ct_cnt=%d, st_cnt=%d temp_sum_cnt=%d\n",
                                        pt_cnt, ct_cnt, st_cnt,temp_sum_cnt);

                                    temp_sum_length = s6.ToDouble()*4;

                                    if( temp_sum_length > 20000){
                                        re_count = 4/2;
                                        re_count = temp_sum_cnt/2;
//                                        re_length = temp_sum_length/2 + 15*(re_count/2);
//                                        re_length = temp_sum_length/2 + 10*(re_count/2);
                                        re_length = temp_sum_length/2 + 6*(re_count/2);
                                    }
                                    else{
                                        temp_sum_length = s6.ToDouble()*temp_sum_cnt;
                                        if(temp_sum_length > 20000){
                                            re_count = 2;
                                            re_length = temp_sum_length/2 + (temp_sum_cnt/2)*15;
                                        }
                                        else{
                                            re_count = 1;
//                                            re_length = temp_sum_length + 15*temp_sum_cnt;
//                                            re_length = temp_sum_length + 10*temp_sum_cnt;
                                            re_length = temp_sum_length + 6*temp_sum_cnt;
                                        }
                                    }
//                                    if(sta_flag == 1)   re_width = temp_sum_width +10;
//                                    else                re_width = temp_sum_width +15;
                                    if(sta_flag == 1)   re_width = temp_sum_width +8;
//                                    else                re_width = temp_sum_width +10;
                                    else                re_width = temp_sum_width +8;
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+3].serno, plate2[si+3].location ,plate2[si+3].grade, plate2[si+3].thk,
                                                plate2[si+3].width, plate2[si+3].length ,plate2[si+3].pqty, plate2[si+3].cqty,plate2[si+3].sqty);

                                    si = si+3;
                                break;
                            }
                        }
                        else{    // 길이 조건이 7,000보다 컸을때.
                            ratio = s6.ToDouble()/s5.ToDouble();
                            temp_sum_length = s6.ToDouble();

                            switch(l_flag){  // 길이 기준 Flag;
                                case    1 :
                                    if(w_flag == 1){
                                        if(ratio >= 6.0){
                                            ShowMessage("폭 대 길이의 비가 1:6 이상입니다, 확인 한번 하세요.");
                                        }
                                        temp_sum_cnt = sum_cnt1;
                                        re_count = temp_sum_cnt;
                                        if(sta_flag == 1){
//                                            re_length = temp_sum_length + 30;
//                                            re_width = temp_sum_width +10;
                                            re_length = temp_sum_length + 15;
                                            re_width = temp_sum_width +8;
                                        }
                                        else{
//                                            re_length = temp_sum_length + 15;
//                                            re_width = temp_sum_width +15;
//                                            re_length = temp_sum_length + 10;
//                                            re_width = temp_sum_width +10;
                                            re_length = temp_sum_length + 6;
                                            re_width = temp_sum_width +8;
                                        }
                                        width = int(re_width);
                                        length = int(re_length);
                                        seqno++;
                                        s10 = s10+"0"+String(seqno);
                                        plate2_dwg_save_info(s10, si);
                                        dwg_seqno++;
                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    }
                                    else if(w_flag == 2){
                                        sum_cnt2 = plate2[si+1].pqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+1].sqty.ToInt();
                                        temp_sum_cnt = sum_cnt1+sum_cnt2;

                                        max_width = s5.ToDouble();
                                        if(plate2[si+1].width.ToDouble() > max_width){
                                           max_width = plate2[si+1].width.ToDouble();
                                        }

                                        temp_sum_length = s6.ToDouble() + plate2[si+1].length.ToDouble();

                                        ratio = temp_sum_length/s5.ToDouble();

                                        if(c_flag == 2){   // 갯수가 대칭으로 같을때..
                                            if(ratio <= 6 && temp_sum_length < 20000){
                                                if(sta_flag == 1){
//                                                    re_width = max_width + 10;
//                                                   re_length = temp_sum_length + 30 + (temp_sum_cnt/2)*3;
                                                    re_width = max_width + 8;
                                                    re_length = temp_sum_length + 15 + (temp_sum_cnt/2)*3;
                                                }
                                                else{
//                                                    re_width = max_width + 15;
//                                                    re_length = temp_sum_length + 2*15;
//                                                    re_width = max_width + 10;
//                                                    re_length = temp_sum_length + 2*10;
                                                    re_width = max_width + 8;
                                                    re_length = temp_sum_length + 2*6;
                                                }
                                                re_count = temp_sum_cnt/2;
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                    plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                    plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                si = si +1;
                                            }
                                            else if(ratio >6 || temp_sum_length > 20000){
                                                temp_sum_cnt = sum_cnt1;
                                                temp_sum_length = s6.ToDouble()*temp_sum_cnt;
                                                ratio = temp_sum_length/s5.ToDouble();
                                                if(ratio < 6){
                                                    re_count = 1;
                                                    if(sta_flag == 1){
//                                                        re_length = temp_sum_length + 30 + temp_sum_cnt*3;
//                                                        re_width = s5.ToDouble() +10;
                                                        re_length = temp_sum_length + 15 + temp_sum_cnt*3;
                                                        re_width = s5.ToDouble() +8;
                                                    }
                                                    else{
//                                                        re_length = temp_sum_length + 15 + temp_sum_cnt*15;;
//                                                        re_width = s5.ToDouble()+15;
//                                                        re_length = temp_sum_length + 10 + temp_sum_cnt*15;;
//                                                        re_width = s5.ToDouble()+10;
                                                        re_length = temp_sum_length + 6 + temp_sum_cnt*15;;
                                                        re_width = s5.ToDouble()+8;
                                                    }
                                                }
                                                else{
                                                    if(temp_sum_length > 20000){
                                                        re_count = sum_cnt1;
                                                        if(sta_flag == 1){
//                                                            re_length = s6.ToDouble() + 30 + ((re_count/2) -1)+3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = s6.ToDouble() + 15 + ((re_count/2) -1)+3;
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        else{
//                                                            re_length = s6.ToDouble() + 15;
//                                                            re_width = s5.ToDouble()+ 15;
//                                                            re_length = s6.ToDouble() + 10;
//                                                            re_width = s5.ToDouble()+ 10;
                                                            re_length = s6.ToDouble() + 6;
                                                            re_width = s5.ToDouble()+ 8;
                                                        }
                                                    }
                                                    else{
                                                        re_count = temp_sum_cnt/2;
                                                        if(sta_flag == 1){
//                                                            re_length = temp_sum_length + 30 + re_count*3;
//                                                            re_width = s5.ToDouble() +10;
                                                            re_length = temp_sum_length + 15 + re_count*3;
                                                            re_width = s5.ToDouble() +8;
                                                        }
                                                        else{
//                                                            re_length = temp_sum_length + 15 + re_count*15;;
//                                                            re_width = s5.ToDouble()+15;
//                                                            re_length = temp_sum_length + 10 + re_count*10;
//                                                            re_width = s5.ToDouble()+10;
                                                            re_length = temp_sum_length + 6 + re_count*6;
                                                            re_width = s5.ToDouble()+8;
                                                        }

                                                    }
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                   s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                    s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            }
                                            else{
                                                ShowMessage("처리하기가 힘든 경우입니다. 2805로 전화주세요..");

                                            }
                                        }
                                        else{  // 갯수가 단독으로 존재할때... 첫번째 부재 한개 또는 이상.... , 두번쨰 부재 한개 또는 이상...
                                            temp_sum_length = s6.ToDouble()*sum_cnt1 + plate2[si+1].length.ToDouble()*sum_cnt2;
                                            ratio = temp_sum_length/s5.ToDouble();
                                            if( temp_sum_length > 20000 || ratio > 8 ){
                                                //ShowMessage("처리하기 힘든 경우입니다. 2805로 연락주세요");
                                                re_count = sum_cnt1;
                                                if(sta_flag == 1){
//                                                    re_length = s6.ToDouble() + 30 + (sum_cnt1-1)*3;
//                                                    re_width = max_width +10;
                                                    re_length = s6.ToDouble() + 15 + (sum_cnt1-1)*3;
                                                    re_width = max_width +8;
                                                }
                                                else{
//                                                    re_length = s6.ToDouble() + 15 + (sum_cnt1-1)*15;;
//                                                    re_width = max_width+15;
//                                                    re_length = s6.ToDouble() + 10 + (sum_cnt1-1)*15;;
//                                                    re_width = max_width+10;
                                                    re_length = s6.ToDouble() + 6 + (sum_cnt1-1)*6;;
                                                    re_width = max_width+8;
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            }
                                            else{
                                                //if(ratio <= 6 && temp_sum_length < 20000){
                                                re_count = 1;
                                                if(sta_flag == 1){
//                                                    re_length = temp_sum_length + 30 + (temp_sum_cnt-1)*3;
//                                                    re_width = max_width +10;
                                                    re_length = temp_sum_length + 15 + (temp_sum_cnt-1)*3;
                                                    re_width = max_width +8;
                                                }
                                                else{
//                                                    re_length = temp_sum_length + 15 + temp_sum_cnt*15;;
//                                                    re_width = max_width+15;
//                                                    re_length = temp_sum_length + 10 + temp_sum_cnt*10;
//                                                    re_width = max_width+10;
                                                    re_length = temp_sum_length + 6 + temp_sum_cnt*6;
                                                    re_width = max_width+8;
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                plate2_dwg_save_info(s10, si);
                                                dwg_seqno++;
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                    plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                    plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);
                                                si = si +1;
                                            }
                                            /*
                                            else if(ratio > 6 || temp_sum_length < 20000){
                                                re_count = 1;   //sum_cnt1;
                                                if(sta_flag == 1){
                                                    //re_length = s6.ToDouble() + 30 + (sum_cnt1-1)*3;
                                                    re_length = temp_sum_length.ToDouble() + 30 + (temp_sum_cnt-1)*3;
                                                    re_width = max_width +10;
                                                }
                                                else{
                                                    //re_length = s6.ToDouble() + 15 + (sum_cnt1-1)*15;
                                                    re_length = temp_sum_length.ToDouble() + 15 + (temp_sum_cnt-1)*15;
                                                    re_width = max_width+15;
                                                }
                                                width = int(re_width);
                                                length = int(re_length);
                                                seqno++;
                                                s10 = s10+"0"+String(seqno);
                                                fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                        s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                        s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                            }
                                            else{
                                                ShowMessage("처리하기가 힘든 경우입니다. 2805로 전화주세요..");

                                            }
                                            */
                                        }
                                    }
                                    else{
                                        ShowMessage("경우의 수가 반영되지 않았습니다. 2805로 연락주세요");
                                        temp_sum_cnt = sum_cnt1;
                                        re_count = temp_sum_cnt;
                                        if(sta_flag == 1){
//                                            re_length = temp_sum_length + 30;
//                                            re_width = temp_sum_width +10;
                                            re_length = temp_sum_length + 15;
                                            re_width = temp_sum_width +8;
                                        }
                                        else{
//                                            re_length = temp_sum_length + 15;
//                                            re_width = temp_sum_width +15;
//                                            re_length = temp_sum_length + 10;
//                                            re_width = temp_sum_width +10;
                                            re_length = temp_sum_length + 6;
                                            re_width = temp_sum_width +8;
                                        }
                                        width = int(re_width);
                                        length = int(re_length);
                                        seqno++;
                                        s10 = s10+"0"+String(seqno);
                                        plate2_dwg_save_info(s10, si);
                                        dwg_seqno++;
                                        fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                                s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                                s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    }
                                break;
                                case    2:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt();

                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;

                                    if(c_flag == 2){
                                        temp_sum_length = s6.ToDouble() + plate2[si+1].length.ToDouble();
                                        if(temp_sum_length > 20000){
                                            re_count = temp_sum_cnt;
                                            if(sta_flag == 1){
//                                                re_length = 30 + temp_sum_length;
//                                                re_width = temp_sum_width +10;
                                                re_length = 15 + temp_sum_length;
                                                re_width = temp_sum_width +8;
                                            }
                                            else{
//                                                re_length = 15 + temp_sum_length;
//                                                re_width = temp_sum_width +15;
//                                                re_length = 10 + temp_sum_length;
//                                                re_width = temp_sum_width +10;
                                                re_length = 6 + temp_sum_length;
                                                re_width = temp_sum_width +8;
                                            }
                                        }
                                        else if(temp_sum_length > 10000){   // 길이와 갯수를 절반으로 나누기.
                                            re_count = temp_sum_cnt/2;
                                            if(sta_flag == 1){
//                                                re_length = 30 + temp_sum_length + (re_count-1)*2 ;
//                                                re_width = temp_sum_width +10;
                                                re_length = 15 + temp_sum_length + (re_count-1)*2 ;
                                                re_width = temp_sum_width +8;
                                            }
                                            else{
//                                                re_length = 15*re_count + temp_sum_length;
//                                                re_width = temp_sum_width +15;
//                                                re_length = 10*re_count + temp_sum_length;
//                                                re_width = temp_sum_width +10;
                                                re_length = 6*re_count + temp_sum_length;
                                                re_width = temp_sum_width +8;
                                            }
                                        }
                                        else{
                                        temp_sum_cnt = temp_sum_cnt / 2;                 //2011.06.02
                                            re_count = temp_sum_cnt;

                                            if(sta_flag == 1){
//                                                re_length = 30 + temp_sum_length;
//                                                re_width = temp_sum_width +10;
                                                re_length = 15 + temp_sum_length;
                                                re_width = temp_sum_width +8;
                                            }
                                            else{
//                                                re_length = 15 + temp_sum_length;
//                                                re_width = temp_sum_width +15;
//                                                re_length = 10 + temp_sum_length;
//                                                re_width = temp_sum_width +10;
                                                re_length = 6 + temp_sum_length;
                                                re_width = temp_sum_width +8;
                                            }
                                        }
                                    }
                                    else{
                                        re_count = temp_sum_cnt;
                                        if(sta_flag == 1){
//                                            re_length = 30 + temp_sum_length;
//                                            re_width = temp_sum_width +10;
                                            re_length = 15 + temp_sum_length;
                                            re_width = temp_sum_width +8;
                                        }
                                        else{
//                                            re_length = 15 + temp_sum_length;
//                                            re_width = temp_sum_width +15;
//                                            re_length = 10 + temp_sum_length;
//                                            re_width = temp_sum_width +10;
                                            re_length = 6 + temp_sum_length;
                                            re_width = temp_sum_width +8;
                                        }
                                    }
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    si = si+1;

                                break;
                                case    3:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt();

                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                    re_count = temp_sum_cnt;
                                    if(sta_flag == 1){
//                                        re_length = 30 + temp_sum_length;
//                                        re_width = temp_sum_width +10;
                                        re_length = 15 + temp_sum_length;
                                        re_width = temp_sum_width +8;
                                    }
                                    else{
//                                        re_length = 15 + temp_sum_length;
//                                        re_width = temp_sum_width +15;
//                                        re_length = 10 + temp_sum_length;
//                                        re_width = temp_sum_width +10;
                                        re_length = 6 + temp_sum_length;
                                        re_width = temp_sum_width +8;
                                    }
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);
                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                    si = si+2;
                                break;
                                case    4:
                                    pt_cnt = plate2[si].pqty.ToInt() + plate2[si+1].pqty.ToInt() + plate2[si+2].pqty.ToInt() + plate2[si+3].pqty.ToInt();
                                    ct_cnt = plate2[si].cqty.ToInt() + plate2[si+1].cqty.ToInt() + plate2[si+2].cqty.ToInt() + plate2[si+3].cqty.ToInt();
                                    st_cnt = plate2[si].sqty.ToInt() + plate2[si+1].sqty.ToInt() + plate2[si+2].sqty.ToInt() + plate2[si+3].sqty.ToInt();

                                    temp_sum_cnt = pt_cnt + ct_cnt + st_cnt;
                                    re_count = temp_sum_cnt;
                                    if(sta_flag == 1){
//                                        re_length = 30 + temp_sum_length;
//                                        re_width = temp_sum_width +10;
                                        re_length = 15 + temp_sum_length;
                                        re_width = temp_sum_width +8;
                                    }
                                    else{
//                                        re_length = 15 + temp_sum_length;
//                                        re_width = temp_sum_width +15;
//                                        re_length = 10 + temp_sum_length;
//                                        re_width = temp_sum_width +10;
                                        re_length = 6 + temp_sum_length;
                                        re_width = temp_sum_width +8;
                                    }
                                    width = int(re_width);
                                    length = int(re_length);
                                    seqno++;
                                    s10 = s10+"0"+String(seqno);

                                    plate2_dwg_save_info(s10, si);
                                    dwg_seqno++;
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s,%d,%s,%s,%d,%d,%d,\n",
                                            s1.c_str(),s2.c_str(),s3.c_str(),s4.c_str(),s5.c_str(),
                                            s6.c_str(),s7.c_str(),s8.c_str(),s9.c_str(),group_index, s10.c_str(),s11.c_str(), width, length, re_count);
                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+1].serno, plate2[si+1].location ,plate2[si+1].grade, plate2[si+1].thk,
                                                plate2[si+1].width, plate2[si+1].length ,plate2[si+1].pqty, plate2[si+1].cqty,plate2[si+1].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+2].serno, plate2[si+2].location ,plate2[si+2].grade, plate2[si+2].thk,
                                                plate2[si+2].width, plate2[si+2].length ,plate2[si+2].pqty, plate2[si+2].cqty,plate2[si+2].sqty);

                                    fprintf(fs,"NESTPART=%s,%s,%s,%s,%s,%s,%s,%s,%s, , , , , , ,\n",
                                                plate2[si+3].serno, plate2[si+3].location ,plate2[si+3].grade, plate2[si+3].thk,
                                                plate2[si+3].width, plate2[si+3].length ,plate2[si+3].pqty, plate2[si+3].cqty,plate2[si+3].sqty);

                                    si = si+3;
                                break;
                            }
                        }
                    }
                }
            }

            if(s4.Length() > 0){
                if( s4.ToDouble() >= 6.0 && s4.ToDouble() < 8.0){
                    if( re_width > 3700 ||  re_width < 1525 ) ShowMessage(s_dwgname+"파일에서 폭이 MAX/MIN 사이즈 (3700/1525)을 초과하였습니다.");
                }
                else if( s4.ToDouble() >= 8.0 && s4.ToDouble() < 9.0){
                    if( re_width > 3900 ||  re_width < 1525) ShowMessage(s_dwgname+"파일에서 폭이 MAX/MIN 사이즈 (3900/1525)을 초과하였습니다.");
                }
                else{
                    if( re_width > 4100 || re_width < 1525) ShowMessage(s_dwgname+"파일에서 폭이 MAX/MIN 사이즈 (4100/1525)을 초과하였습니다.");
                }
                if( re_length < base_length || re_length > 20400 ){
                    ShowMessage(s_dwgname+"파일에서 길이가 MAX/MIN 사이즈 (20400/7980)을 초과하였습니다.");
                }

                weight = int( ( re_width * re_length * s4.ToDouble() * 7.85) / (1000000) );     //폭*길이*두께*비중/1000000

                if( weight > 15000)  ShowMessage(s_dwgname+"파일에서 중량이 MAX 15000 Kg을 초과하였습니다.");
            }
        }
    }
    fclose(fp);
//
/*    if(fpso_flag.SubString(1,1) == "1")
        fprintf(fs, "FPSO FLAG : 1");
    else if(fpso_flag.SubString(1,1) == "2")
        fprintf(fs, "FPSO FLAG : 2");*/
    if(fpso_flag.SubString(1,1) == "R")
        fprintf(fs, "FPSO FLAG : R");

    fclose(fs);
    //  11.11.30
    //  hot_coil_plate를 POR 생성시 반영토록 함(작업자가 수작업 수정하여 저장하는 경우가 있으므로)
    AnsiString    str_line[256];
    fs = fopen(s_dwgname.c_str(), "r");

    char temp_buf[132];
    int e = 0;
    for( ;fgets(c_buf,132,fp)!=NULL; )
    {

        //Trim(c_buf);
        //MAT=     STEEL,NSA02,   A, 20.0,1510, 5200, 1.233,0,0,
        //NESTPART=2,   FR256SEC, B, A,   20.0, 150,  4987, 1,0,1,
        AnsiString temp_buf = "";
        temp_buf = String(c_buf);
        temp_buf = temp_buf.Trim();

        if(temp_buf.SubString(1,8) == "NESTPART")
        {
            AnsiString s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16;
            AnsiString strReal = "";

            // pos, location   grade thk   width  length    p     c   s   group       geyel   etc   폭     길이      갯수
            // 1       2         3     4     5      6       7    8    9     10         11     12    13,     14,      15
            // 3(1),TEST1(2),  A(3),10(4),1688(5),12180(6),1(7),0(8),0(9),g_idex(10), NCA(11),(12),3406(13),12195(14),1(15),
            temp_buf = temp_buf.SubString(10,temp_buf.Length()-10);
            s1="";s2="";s3="";s4="";s5="",s6="";s7="";s8="";s9="";s10="";s11=""; s12="";s13="";s14="";s15="";s16="";
            s1 = SplitString(temp_buf,1,",");
            s2 = SplitString(temp_buf,2,",");
            s3 = SplitString(temp_buf,3,",");
            s4 = SplitString(temp_buf,4,",");
            s5 = SplitString(temp_buf,5,",");
            s6 = SplitString(temp_buf,6,",");
            s7 = SplitString(temp_buf,7,",");
            s8 = SplitString(temp_buf,8,",");
            s9 = SplitString(temp_buf,9,",");
            s10 = SplitString(temp_buf,10,",");
            s11 = SplitString(temp_buf,11,",");
            s12 = SplitString(temp_buf,12,",");
            s13 = SplitString(temp_buf,13,",");
//ShowMessage(s13);
            s14 = SplitString(temp_buf,14,",");
            s15 = SplitString(temp_buf,15,",");
            s16 = SplitString(temp_buf,16,",");

            int hot_coil_flag = 0;

            hot_coil_flag = hot_coil_plate_check(atof(s4.c_str()), s3);

            hot_coil_flag = 0;                          // 11.12.1 김정호CJN

            if(hot_coil_flag == 1)                                  
            {
                if(atoi(s14.c_str()) >3999 && atoi(s14.c_str()) < 14501)
                {
                    int hot_coil_wid = 1524;
                    int hot_coil_len = 0;
                    int mod = 0;
                    mod = atoi(s14.c_str()) % 100;
                    hot_coil_len = (atoi(s14.c_str()) / 100 * 100) + 100;
                    if(mod == 0) hot_coil_len =- 100;
                    if((hot_coil_wid * hot_coil_len) - (atoi(s14.c_str()) * atoi(s13.c_str()) ) < (hot_coil_wid * hot_coil_len) * 0.05
                     && (hot_coil_wid * hot_coil_len) - (atoi(s14.c_str()) * atoi(s13.c_str()) ) > 0)
                    {
                        s13 = (String)hot_coil_wid;
                        s14 = (String)hot_coil_len;
                    }
                    hot_coil_wid = 1829;
                    hot_coil_len = 0;
                    mod = 0;
                    mod = atoi(s14.c_str()) % 100;
                    hot_coil_len = (atoi(s14.c_str()) / 100 * 100) + 100;
                    if(mod == 0) hot_coil_len =- 100;
                    if((hot_coil_wid * hot_coil_len) - (atoi(s14.c_str()) * atoi(s13.c_str()) ) < (hot_coil_wid * hot_coil_len) * 0.05
                     && (hot_coil_wid * hot_coil_len) - (atoi(s14.c_str()) * atoi(s13.c_str()) ) > 0)
                    {
                        s13 = (String)hot_coil_wid;
                        s14 = (String)hot_coil_len;
                    }
                }
            }        //
            strReal = "NESTPART=" + s1+","+s2+","+s3+","+s4+","+s5+","+s6+","+s7+","+s8+","+s9+","+s10+","+s11+","+s12+","+s13+","+s14+","+s15+","+s16+",";
            str_line[e] =  strReal;
            e++;
        }
        else
        {
            str_line[e] =  temp_buf;
            e++;
        }
    }
    fclose(fs);
    fs = fopen(s_dwgname.c_str(), "w");
    for(int mm = 0; mm < e; mm++)
    {
        fprintf(fs,"%s\n", str_line[mm]);
    }
    fclose(fs);
}
